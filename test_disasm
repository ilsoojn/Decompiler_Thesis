
test:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x16b>
  400248:	78 38                	js     400282 <_init-0x15e>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 18                	add    BYTE PTR [rax],bl
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 81 c0 30 75 f9    	add    BYTE PTR [rcx-0x68acf40],al
  400289:	f2 39 63 16          	repnz cmp DWORD PTR [rbx+0x16],esp
  40028d:	24 cd                	and    al,0xcd
  40028f:	ed                   	in     eax,dx
  400290:	5a                   	pop    rdx
  400291:	6b                   	.byte 0x6b
  400292:	ac                   	lods   al,BYTE PTR ds:[rsi]
  400293:	d2                   	.byte 0xd2
  400294:	35                   	.byte 0x35
  400295:	56                   	push   rsi
  400296:	8f                   	(bad)  
  400297:	e0                   	.byte 0xe0

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	12 00                	adc    al,BYTE PTR [rax]
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	24 00                	and    al,0x0
  400302:	00 00                	add    BYTE PTR [rax],al
  400304:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40031c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  40031e:	73 6f                	jae    40038f <_init-0x51>
  400320:	2e 36 00 70 72       	cs add BYTE PTR ss:[rax+0x72],dh
  400325:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
  40032c:	6c                   	ins    BYTE PTR es:[rdi],dx
  40032d:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400334:	72 74                	jb     4003aa <_init-0x36>
  400336:	5f                   	pop    rdi
  400337:	6d                   	ins    DWORD PTR es:[rdi],dx
  400338:	61                   	(bad)  
  400339:	69 6e 00 5f 5f 67 6d 	imul   ebp,DWORD PTR [rsi+0x0],0x6d675f5f
  400340:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400341:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400342:	5f                   	pop    rdi
  400343:	73 74                	jae    4003b9 <_init-0x27>
  400345:	61                   	(bad)  
  400346:	72 74                	jb     4003bc <_init-0x24>
  400348:	5f                   	pop    rdi
  400349:	5f                   	pop    rdi
  40034a:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  40034d:	49                   	rex.WB
  40034e:	42                   	rex.X
  40034f:	43 5f                	rex.XB pop r15
  400351:	32 2e                	xor    ch,BYTE PTR [rsi]
  400353:	32 2e                	xor    ch,BYTE PTR [rsi]
  400355:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    BYTE PTR [rax],al
  40035a:	02 00                	add    al,BYTE PTR [rax]
  40035c:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    DWORD PTR [rax],eax
  400362:	01 00                	add    DWORD PTR [rax],eax
  400364:	01 00                	add    DWORD PTR [rax],eax
  400366:	00 00                	add    BYTE PTR [rax],al
  400368:	10 00                	adc    BYTE PTR [rax],al
  40036a:	00 00                	add    BYTE PTR [rax],al
  40036c:	00 00                	add    BYTE PTR [rax],al
  40036e:	00 00                	add    BYTE PTR [rax],al
  400370:	75 1a                	jne    40038c <_init-0x54>
  400372:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400378:	33 00                	xor    eax,DWORD PTR [rax]
  40037a:	00 00                	add    BYTE PTR [rax],al
  40037c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f8                   	clc    
  400381:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  400384:	00 00                	add    BYTE PTR [rax],al
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	06                   	(bad)  
  400389:	00 00                	add    BYTE PTR [rax],al
  40038b:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .rela.plt:

0000000000400398 <.rela.plt>:
  400398:	18 10                	sbb    BYTE PTR [rax],dl
  40039a:	60                   	(bad)  
  40039b:	00 00                	add    BYTE PTR [rax],al
  40039d:	00 00                	add    BYTE PTR [rax],al
  40039f:	00 07                	add    BYTE PTR [rdi],al
  4003a1:	00 00                	add    BYTE PTR [rax],al
  4003a3:	00 01                	add    BYTE PTR [rcx],al
	...
  4003ad:	00 00                	add    BYTE PTR [rax],al
  4003af:	00 20                	add    BYTE PTR [rax],ah
  4003b1:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003b4:	00 00                	add    BYTE PTR [rax],al
  4003b6:	00 00                	add    BYTE PTR [rax],al
  4003b8:	07                   	(bad)  
  4003b9:	00 00                	add    BYTE PTR [rax],al
  4003bb:	00 02                	add    BYTE PTR [rdx],al
	...
  4003c5:	00 00                	add    BYTE PTR [rax],al
  4003c7:	00 28                	add    BYTE PTR [rax],ch
  4003c9:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  4003cc:	00 00                	add    BYTE PTR [rax],al
  4003ce:	00 00                	add    BYTE PTR [rax],al
  4003d0:	07                   	(bad)  
  4003d1:	00 00                	add    BYTE PTR [rax],al
  4003d3:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .init:

00000000004003e0 <_init>:
  4003e0:	48 83 ec 08          	sub    rsp,0x8
  4003e4:	48 8b 05 0d 0c 20 00 	mov    rax,QWORD PTR [rip+0x200c0d]        # 600ff8 <__gmon_start__>
  4003eb:	48 85 c0             	test   rax,rax
  4003ee:	74 05                	je     4003f5 <_init+0x15>
  4003f0:	e8 3b 00 00 00       	call   400430 <__gmon_start__@plt>
  4003f5:	48 83 c4 08          	add    rsp,0x8
  4003f9:	c3                   	ret    

Disassembly of section .plt:

0000000000400400 <.plt>:
  400400:	ff 35 02 0c 20 00    	push   QWORD PTR [rip+0x200c02]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400406:	ff 25 04 0c 20 00    	jmp    QWORD PTR [rip+0x200c04]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40040c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400410 <printf@plt>:
  400410:	ff 25 02 0c 20 00    	jmp    QWORD PTR [rip+0x200c02]        # 601018 <printf@GLIBC_2.2.5>
  400416:	68 00 00 00 00       	push   0x0
  40041b:	e9 e0 ff ff ff       	jmp    400400 <.plt>

0000000000400420 <__libc_start_main@plt>:
  400420:	ff 25 fa 0b 20 00    	jmp    QWORD PTR [rip+0x200bfa]        # 601020 <__libc_start_main@GLIBC_2.2.5>
  400426:	68 01 00 00 00       	push   0x1
  40042b:	e9 d0 ff ff ff       	jmp    400400 <.plt>

0000000000400430 <__gmon_start__@plt>:
  400430:	ff 25 f2 0b 20 00    	jmp    QWORD PTR [rip+0x200bf2]        # 601028 <__gmon_start__>
  400436:	68 02 00 00 00       	push   0x2
  40043b:	e9 c0 ff ff ff       	jmp    400400 <.plt>

Disassembly of section .text:

0000000000400440 <_start>:
  400440:	31 ed                	xor    ebp,ebp
  400442:	49 89 d1             	mov    r9,rdx
  400445:	5e                   	pop    rsi
  400446:	48 89 e2             	mov    rdx,rsp
  400449:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40044d:	50                   	push   rax
  40044e:	54                   	push   rsp
  40044f:	49 c7 c0 40 07 40 00 	mov    r8,0x400740
  400456:	48 c7 c1 d0 06 40 00 	mov    rcx,0x4006d0
  40045d:	48 c7 c7 50 05 40 00 	mov    rdi,0x400550
  400464:	e8 b7 ff ff ff       	call   400420 <__libc_start_main@plt>
  400469:	f4                   	hlt    
  40046a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400470 <deregister_tm_clones>:
  400470:	b8 47 10 60 00       	mov    eax,0x601047
  400475:	55                   	push   rbp
  400476:	48 2d 40 10 60 00    	sub    rax,0x601040
  40047c:	48 83 f8 0e          	cmp    rax,0xe
  400480:	48 89 e5             	mov    rbp,rsp
  400483:	77 02                	ja     400487 <deregister_tm_clones+0x17>
  400485:	5d                   	pop    rbp
  400486:	c3                   	ret    
  400487:	b8 00 00 00 00       	mov    eax,0x0
  40048c:	48 85 c0             	test   rax,rax
  40048f:	74 f4                	je     400485 <deregister_tm_clones+0x15>
  400491:	5d                   	pop    rbp
  400492:	bf 40 10 60 00       	mov    edi,0x601040
  400497:	ff e0                	jmp    rax
  400499:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000004004a0 <register_tm_clones>:
  4004a0:	b8 40 10 60 00       	mov    eax,0x601040
  4004a5:	55                   	push   rbp
  4004a6:	48 2d 40 10 60 00    	sub    rax,0x601040
  4004ac:	48 c1 f8 03          	sar    rax,0x3
  4004b0:	48 89 e5             	mov    rbp,rsp
  4004b3:	48 89 c2             	mov    rdx,rax
  4004b6:	48 c1 ea 3f          	shr    rdx,0x3f
  4004ba:	48 01 d0             	add    rax,rdx
  4004bd:	48 d1 f8             	sar    rax,1
  4004c0:	75 02                	jne    4004c4 <register_tm_clones+0x24>
  4004c2:	5d                   	pop    rbp
  4004c3:	c3                   	ret    
  4004c4:	ba 00 00 00 00       	mov    edx,0x0
  4004c9:	48 85 d2             	test   rdx,rdx
  4004cc:	74 f4                	je     4004c2 <register_tm_clones+0x22>
  4004ce:	5d                   	pop    rbp
  4004cf:	48 89 c6             	mov    rsi,rax
  4004d2:	bf 40 10 60 00       	mov    edi,0x601040
  4004d7:	ff e2                	jmp    rdx
  4004d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000004004e0 <__do_global_dtors_aux>:
  4004e0:	80 3d 59 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b59],0x0        # 601040 <__TMC_END__>
  4004e7:	75 11                	jne    4004fa <__do_global_dtors_aux+0x1a>
  4004e9:	55                   	push   rbp
  4004ea:	48 89 e5             	mov    rbp,rsp
  4004ed:	e8 7e ff ff ff       	call   400470 <deregister_tm_clones>
  4004f2:	5d                   	pop    rbp
  4004f3:	c6 05 46 0b 20 00 01 	mov    BYTE PTR [rip+0x200b46],0x1        # 601040 <__TMC_END__>
  4004fa:	f3 c3                	repz ret 
  4004fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400500 <frame_dummy>:
  400500:	48 83 3d 18 09 20 00 	cmp    QWORD PTR [rip+0x200918],0x0        # 600e20 <__JCR_END__>
  400507:	00 
  400508:	74 1e                	je     400528 <frame_dummy+0x28>
  40050a:	b8 00 00 00 00       	mov    eax,0x0
  40050f:	48 85 c0             	test   rax,rax
  400512:	74 14                	je     400528 <frame_dummy+0x28>
  400514:	55                   	push   rbp
  400515:	bf 20 0e 60 00       	mov    edi,0x600e20
  40051a:	48 89 e5             	mov    rbp,rsp
  40051d:	ff d0                	call   rax
  40051f:	5d                   	pop    rbp
  400520:	e9 7b ff ff ff       	jmp    4004a0 <register_tm_clones>
  400525:	0f 1f 00             	nop    DWORD PTR [rax]
  400528:	e9 73 ff ff ff       	jmp    4004a0 <register_tm_clones>
  40052d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000400530 <foo>:
  400530:	55                   	push   rbp
  400531:	48 89 e5             	mov    rbp,rsp
  400534:	0f 57 c9             	xorps  xmm1,xmm1
  400537:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
  40053c:	0f 28 c1             	movaps xmm0,xmm1
  40053f:	5d                   	pop    rbp
  400540:	c3                   	ret    
  400541:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nop WORD PTR cs:[rax+rax*1+0x0]
  400548:	0f 1f 84 00 00 00 00 
  40054f:	00 

0000000000400550 <main>:
  400550:	55                   	push   rbp
  400551:	48 89 e5             	mov    rbp,rsp
  400554:	48 83 ec 50          	sub    rsp,0x50
  400558:	0f 57 c0             	xorps  xmm0,xmm0
  40055b:	48 b8 0b ab 9c ee 00 	movabs rax,0xee9cab0b
  400562:	00 00 00 
  400565:	f2 48 0f 2a c8       	cvtsi2sd xmm1,rax
  40056a:	48 b8 9e 5c ab 4f 00 	movabs rax,0x4fab5c9e
  400571:	00 00 00 
  400574:	f2 48 0f 2a d0       	cvtsi2sd xmm2,rax
  400579:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  400580:	f2 0f 11 55 e8       	movsd  QWORD PTR [rbp-0x18],xmm2
  400585:	f2 0f 11 4d f0       	movsd  QWORD PTR [rbp-0x10],xmm1
  40058a:	f2 0f 10 4d f0       	movsd  xmm1,QWORD PTR [rbp-0x10]
  40058f:	f2 0f 58 4d e8       	addsd  xmm1,QWORD PTR [rbp-0x18]
  400594:	f2 0f 11 4d e0       	movsd  QWORD PTR [rbp-0x20],xmm1
  400599:	f2 0f 10 4d f0       	movsd  xmm1,QWORD PTR [rbp-0x10]
  40059e:	f2 0f 5c 4d e8       	subsd  xmm1,QWORD PTR [rbp-0x18]
  4005a3:	f2 0f 11 4d d8       	movsd  QWORD PTR [rbp-0x28],xmm1
  4005a8:	f2 0f 10 4d f0       	movsd  xmm1,QWORD PTR [rbp-0x10]
  4005ad:	f2 0f 59 4d e8       	mulsd  xmm1,QWORD PTR [rbp-0x18]
  4005b2:	f2 0f 11 4d d0       	movsd  QWORD PTR [rbp-0x30],xmm1
  4005b7:	f2 0f 10 4d f0       	movsd  xmm1,QWORD PTR [rbp-0x10]
  4005bc:	f2 0f 5e 4d e8       	divsd  xmm1,QWORD PTR [rbp-0x18]
  4005c1:	f2 0f 11 4d c8       	movsd  QWORD PTR [rbp-0x38],xmm1
  4005c6:	f2 0f 10 4d e0       	movsd  xmm1,QWORD PTR [rbp-0x20]
  4005cb:	f2 0f 59 4d d8       	mulsd  xmm1,QWORD PTR [rbp-0x28]
  4005d0:	f2 0f 5e 4d d0       	divsd  xmm1,QWORD PTR [rbp-0x30]
  4005d5:	f2 0f 58 4d c8       	addsd  xmm1,QWORD PTR [rbp-0x38]
  4005da:	f2 0f 11 4d c0       	movsd  QWORD PTR [rbp-0x40],xmm1
  4005df:	66 0f 2e 45 c0       	ucomisd xmm0,QWORD PTR [rbp-0x40]
  4005e4:	0f 86 0d 00 00 00    	jbe    4005f7 <main+0xa7>
  4005ea:	f2 0f 2c 45 e0       	cvttsd2si eax,QWORD PTR [rbp-0x20]
  4005ef:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  4005f2:	e9 c5 00 00 00       	jmp    4006bc <main+0x16c>
  4005f7:	0f 57 c0             	xorps  xmm0,xmm0
  4005fa:	f2 0f 10 4d c0       	movsd  xmm1,QWORD PTR [rbp-0x40]
  4005ff:	66 0f 2e c8          	ucomisd xmm1,xmm0
  400603:	0f 82 27 00 00 00    	jb     400630 <main+0xe0>
  400609:	48 b8 05 00 00 00 00 	movabs rax,0x5
  400610:	00 00 00 
  400613:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
  400618:	66 0f 2e 45 c0       	ucomisd xmm0,QWORD PTR [rbp-0x40]
  40061d:	0f 86 0d 00 00 00    	jbe    400630 <main+0xe0>
  400623:	f2 0f 2c 45 d8       	cvttsd2si eax,QWORD PTR [rbp-0x28]
  400628:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  40062b:	e9 8c 00 00 00       	jmp    4006bc <main+0x16c>
  400630:	48 b8 05 00 00 00 00 	movabs rax,0x5
  400637:	00 00 00 
  40063a:	f2 48 0f 2a c0       	cvtsi2sd xmm0,rax
  40063f:	f2 0f 10 4d c0       	movsd  xmm1,QWORD PTR [rbp-0x40]
  400644:	66 0f 2e c8          	ucomisd xmm1,xmm0
  400648:	0f 85 13 00 00 00    	jne    400661 <main+0x111>
  40064e:	0f 8a 0d 00 00 00    	jp     400661 <main+0x111>
  400654:	f2 0f 2c 45 d0       	cvttsd2si eax,QWORD PTR [rbp-0x30]
  400659:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  40065c:	e9 5b 00 00 00       	jmp    4006bc <main+0x16c>
  400661:	e9 00 00 00 00       	jmp    400666 <main+0x116>
  400666:	0f 57 c0             	xorps  xmm0,xmm0
  400669:	f2 0f 10 4d c0       	movsd  xmm1,QWORD PTR [rbp-0x40]
  40066e:	66 0f 2e c8          	ucomisd xmm1,xmm0
  400672:	0f 86 33 00 00 00    	jbe    4006ab <main+0x15b>
  400678:	48 8d 3c 25 60 07 40 	lea    rdi,ds:0x400760
  40067f:	00 
  400680:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
  400685:	b0 01                	mov    al,0x1
  400687:	e8 84 fd ff ff       	call   400410 <printf@plt>
  40068c:	f2 0f 10 04 25 58 07 	movsd  xmm0,QWORD PTR ds:0x400758
  400693:	40 00 
  400695:	f2 0f 10 4d c0       	movsd  xmm1,QWORD PTR [rbp-0x40]
  40069a:	f2 0f 5c c8          	subsd  xmm1,xmm0
  40069e:	f2 0f 11 4d c0       	movsd  QWORD PTR [rbp-0x40],xmm1
  4006a3:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
  4006a6:	e9 bb ff ff ff       	jmp    400666 <main+0x116>
  4006ab:	f2 0f 10 45 c0       	movsd  xmm0,QWORD PTR [rbp-0x40]
  4006b0:	e8 7b fe ff ff       	call   400530 <foo>
  4006b5:	f2 0f 2c c0          	cvttsd2si eax,xmm0
  4006b9:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  4006bc:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  4006bf:	48 83 c4 50          	add    rsp,0x50
  4006c3:	5d                   	pop    rbp
  4006c4:	c3                   	ret    
  4006c5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4006cc:	00 00 00 
  4006cf:	90                   	nop

00000000004006d0 <__libc_csu_init>:
  4006d0:	41 57                	push   r15
  4006d2:	41 89 ff             	mov    r15d,edi
  4006d5:	41 56                	push   r14
  4006d7:	49 89 f6             	mov    r14,rsi
  4006da:	41 55                	push   r13
  4006dc:	49 89 d5             	mov    r13,rdx
  4006df:	41 54                	push   r12
  4006e1:	4c 8d 25 28 07 20 00 	lea    r12,[rip+0x200728]        # 600e10 <__frame_dummy_init_array_entry>
  4006e8:	55                   	push   rbp
  4006e9:	48 8d 2d 28 07 20 00 	lea    rbp,[rip+0x200728]        # 600e18 <__init_array_end>
  4006f0:	53                   	push   rbx
  4006f1:	4c 29 e5             	sub    rbp,r12
  4006f4:	31 db                	xor    ebx,ebx
  4006f6:	48 c1 fd 03          	sar    rbp,0x3
  4006fa:	48 83 ec 08          	sub    rsp,0x8
  4006fe:	e8 dd fc ff ff       	call   4003e0 <_init>
  400703:	48 85 ed             	test   rbp,rbp
  400706:	74 1e                	je     400726 <__libc_csu_init+0x56>
  400708:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40070f:	00 
  400710:	4c 89 ea             	mov    rdx,r13
  400713:	4c 89 f6             	mov    rsi,r14
  400716:	44 89 ff             	mov    edi,r15d
  400719:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40071d:	48 83 c3 01          	add    rbx,0x1
  400721:	48 39 eb             	cmp    rbx,rbp
  400724:	75 ea                	jne    400710 <__libc_csu_init+0x40>
  400726:	48 83 c4 08          	add    rsp,0x8
  40072a:	5b                   	pop    rbx
  40072b:	5d                   	pop    rbp
  40072c:	41 5c                	pop    r12
  40072e:	41 5d                	pop    r13
  400730:	41 5e                	pop    r14
  400732:	41 5f                	pop    r15
  400734:	c3                   	ret    
  400735:	66 66 2e 0f 1f 84 00 	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40073c:	00 00 00 00 

0000000000400740 <__libc_csu_fini>:
  400740:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400744 <_fini>:
  400744:	48 83 ec 08          	sub    rsp,0x8
  400748:	48 83 c4 08          	add    rsp,0x8
  40074c:	c3                   	ret    

Disassembly of section .rodata:

0000000000400750 <_IO_stdin_used>:
  400750:	01 00                	add    DWORD PTR [rax],eax
  400752:	02 00                	add    al,BYTE PTR [rax]
	...
  40075c:	00 00                	add    BYTE PTR [rax],al
  40075e:	f8                   	clc    
  40075f:	3f                   	(bad)  
  400760:	25 6c 66 20 68       	and    eax,0x6820666c
  400765:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  400767:	6c                   	ins    BYTE PTR es:[rdi],dx
  400768:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400769:	0a 00                	or     al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

000000000040076c <.eh_frame_hdr>:
  40076c:	01 1b                	add    DWORD PTR [rbx],ebx
  40076e:	03 3b                	add    edi,DWORD PTR [rbx]
  400770:	38 00                	cmp    BYTE PTR [rax],al
  400772:	00 00                	add    BYTE PTR [rax],al
  400774:	06                   	(bad)  
  400775:	00 00                	add    BYTE PTR [rax],al
  400777:	00 94 fc ff ff 84 00 	add    BYTE PTR [rsp+rdi*8+0x84ffff],dl
  40077e:	00 00                	add    BYTE PTR [rax],al
  400780:	d4                   	(bad)  
  400781:	fc                   	cld    
  400782:	ff                   	(bad)  
  400783:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  400787:	00 c4                	add    ah,al
  400789:	fd                   	std    
  40078a:	ff                   	(bad)  
  40078b:	ff ac 00 00 00 e4 fd 	jmp    FWORD PTR [rax+rax*1-0x21c0000]
  400792:	ff                   	(bad)  
  400793:	ff cc                	dec    esp
  400795:	00 00                	add    BYTE PTR [rax],al
  400797:	00 64 ff ff          	add    BYTE PTR [rdi+rdi*8-0x1],ah
  40079b:	ff                   	(bad)  
  40079c:	ec                   	in     al,dx
  40079d:	00 00                	add    BYTE PTR [rax],al
  40079f:	00 d4                	add    ah,dl
  4007a1:	ff                   	(bad)  
  4007a2:	ff                   	(bad)  
  4007a3:	ff 34 01             	push   QWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000004007a8 <__FRAME_END__-0x110>:
  4007a8:	14 00                	adc    al,0x0
  4007aa:	00 00                	add    BYTE PTR [rax],al
  4007ac:	00 00                	add    BYTE PTR [rax],al
  4007ae:	00 00                	add    BYTE PTR [rax],al
  4007b0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4007b3:	00 01                	add    BYTE PTR [rcx],al
  4007b5:	78 10                	js     4007c7 <_IO_stdin_used+0x77>
  4007b7:	01 1b                	add    DWORD PTR [rbx],ebx
  4007b9:	0c 07                	or     al,0x7
  4007bb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  4007c1:	00 00                	add    BYTE PTR [rax],al
  4007c3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4007c6:	00 00                	add    BYTE PTR [rax],al
  4007c8:	78 fc                	js     4007c6 <_IO_stdin_used+0x76>
  4007ca:	ff                   	(bad)  
  4007cb:	ff 2a                	jmp    FWORD PTR [rdx]
	...
  4007d5:	00 00                	add    BYTE PTR [rax],al
  4007d7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  4007da:	00 00                	add    BYTE PTR [rax],al
  4007dc:	00 00                	add    BYTE PTR [rax],al
  4007de:	00 00                	add    BYTE PTR [rax],al
  4007e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4007e3:	00 01                	add    BYTE PTR [rcx],al
  4007e5:	78 10                	js     4007f7 <_IO_stdin_used+0xa7>
  4007e7:	01 1b                	add    DWORD PTR [rbx],ebx
  4007e9:	0c 07                	or     al,0x7
  4007eb:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  4007f1:	00 00                	add    BYTE PTR [rax],al
  4007f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4007f6:	00 00                	add    BYTE PTR [rax],al
  4007f8:	08 fc                	or     ah,bh
  4007fa:	ff                   	(bad)  
  4007fb:	ff 40 00             	inc    DWORD PTR [rax+0x0]
  4007fe:	00 00                	add    BYTE PTR [rax],al
  400800:	00 0e                	add    BYTE PTR [rsi],cl
  400802:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  400805:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  400808:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40080b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40080e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  400810:	2a 33                	sub    dh,BYTE PTR [rbx]
  400812:	24 22                	and    al,0x22
  400814:	00 00                	add    BYTE PTR [rax],al
  400816:	00 00                	add    BYTE PTR [rax],al
  400818:	1c 00                	sbb    al,0x0
  40081a:	00 00                	add    BYTE PTR [rax],al
  40081c:	44 00 00             	add    BYTE PTR [rax],r8b
  40081f:	00 10                	add    BYTE PTR [rax],dl
  400821:	fd                   	std    
  400822:	ff                   	(bad)  
  400823:	ff 11                	call   QWORD PTR [rcx]
  400825:	00 00                	add    BYTE PTR [rax],al
  400827:	00 00                	add    BYTE PTR [rax],al
  400829:	41 0e                	rex.B (bad) 
  40082b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400831:	00 00                	add    BYTE PTR [rax],al
  400833:	00 00                	add    BYTE PTR [rax],al
  400835:	00 00                	add    BYTE PTR [rax],al
  400837:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40083a:	00 00                	add    BYTE PTR [rax],al
  40083c:	64 00 00             	add    BYTE PTR fs:[rax],al
  40083f:	00 10                	add    BYTE PTR [rax],dl
  400841:	fd                   	std    
  400842:	ff                   	(bad)  
  400843:	ff 75 01             	push   QWORD PTR [rbp+0x1]
  400846:	00 00                	add    BYTE PTR [rax],al
  400848:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40084b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400851:	00 00                	add    BYTE PTR [rax],al
  400853:	00 00                	add    BYTE PTR [rax],al
  400855:	00 00                	add    BYTE PTR [rax],al
  400857:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  40085b:	00 84 00 00 00 70 fe 	add    BYTE PTR [rax+rax*1-0x1900000],al
  400862:	ff                   	(bad)  
  400863:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  400866:	00 00                	add    BYTE PTR [rax],al
  400868:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  40086b:	10 8f 02 45 0e 18    	adc    BYTE PTR [rdi+0x180e4502],cl
  400871:	8e 03                	mov    es,WORD PTR [rbx]
  400873:	45 0e                	rex.RB (bad) 
  400875:	20 8d 04 45 0e 28    	and    BYTE PTR [rbp+0x280e4504],cl
  40087b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff867016c9 <_end+0xffffffff86100681>
  400881:	06                   	(bad)  
  400882:	48 0e                	rex.W (bad) 
  400884:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  40088a:	6c                   	ins    BYTE PTR es:[rdi],dx
  40088b:	0e                   	(bad)  
  40088c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  40088f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400892:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400895:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400898:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40089b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40089e:	08 00                	or     BYTE PTR [rax],al
  4008a0:	14 00                	adc    al,0x0
  4008a2:	00 00                	add    BYTE PTR [rax],al
  4008a4:	cc                   	int3   
  4008a5:	00 00                	add    BYTE PTR [rax],al
  4008a7:	00 98 fe ff ff 02    	add    BYTE PTR [rax+0x2fffffe],bl
	...

00000000004008b8 <__FRAME_END__>:
  4008b8:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	00 05 40 00 00 00    	add    BYTE PTR [rip+0x40],al        # 600e56 <_DYNAMIC+0x2e>
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	e0 04                	loopne 600e1e <__do_global_dtors_aux_fini_array_entry+0x6>
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	01 00                	add    DWORD PTR [rax],eax
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	0c 00                	or     al,0x0
  600e3a:	00 00                	add    BYTE PTR [rax],al
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	e0 03                	loopne 600e45 <_DYNAMIC+0x1d>
  600e42:	40 00 00             	add    BYTE PTR [rax],al
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 600e4d <_DYNAMIC+0x25>
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 44 07 40          	add    BYTE PTR [rdi+rax*1+0x40],al
  600e53:	00 00                	add    BYTE PTR [rax],al
  600e55:	00 00                	add    BYTE PTR [rax],al
  600e57:	00 19                	add    BYTE PTR [rcx],bl
  600e59:	00 00                	add    BYTE PTR [rax],al
  600e5b:	00 00                	add    BYTE PTR [rax],al
  600e5d:	00 00                	add    BYTE PTR [rax],al
  600e5f:	00 10                	add    BYTE PTR [rax],dl
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 1b                	add    BYTE PTR [rbx],bl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 08                	add    BYTE PTR [rax],cl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 1a                	add    BYTE PTR [rdx],bl
  600e79:	00 00                	add    BYTE PTR [rax],al
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 18                	add    BYTE PTR [rax],bl
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    BYTE PTR [rax],al
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	08 00                	or     BYTE PTR [rax],al
  600e92:	00 00                	add    BYTE PTR [rax],al
  600e94:	00 00                	add    BYTE PTR [rax],al
  600e96:	00 00                	add    BYTE PTR [rax],al
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 18                	add    BYTE PTR [rax],bl
  600eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eb4:	00 00                	add    BYTE PTR [rax],al
  600eb6:	00 00                	add    BYTE PTR [rax],al
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    BYTE PTR [rax],al
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 0a                	add    BYTE PTR [rdx],cl
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 3f                	add    BYTE PTR [rdi],bh
  600ed1:	00 00                	add    BYTE PTR [rax],al
  600ed3:	00 00                	add    BYTE PTR [rax],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 0b                	add    BYTE PTR [rbx],cl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 18                	add    BYTE PTR [rax],bl
  600ee1:	00 00                	add    BYTE PTR [rax],al
  600ee3:	00 00                	add    BYTE PTR [rax],al
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  600f01:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	02 00                	add    al,BYTE PTR [rax]
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	48 00 00             	rex.W add BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  600f1a:	00 00                	add    BYTE PTR [rax],al
  600f1c:	00 00                	add    BYTE PTR [rax],al
  600f1e:	00 00                	add    BYTE PTR [rax],al
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 17                	add    BYTE PTR [rdi],dl
  600f29:	00 00                	add    BYTE PTR [rax],al
  600f2b:	00 00                	add    BYTE PTR [rax],al
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 98 03 40 00 00    	add    BYTE PTR [rax+0x4003],bl
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 07                	add    BYTE PTR [rdi],al
  600f39:	00 00                	add    BYTE PTR [rax],al
  600f3b:	00 00                	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 80 03 40 00 00    	add    BYTE PTR [rax+0x4003],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 08                	add    BYTE PTR [rax],cl
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 18                	add    BYTE PTR [rax],bl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 09                	add    BYTE PTR [rcx],cl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 18                	add    BYTE PTR [rax],bl
  600f61:	00 00                	add    BYTE PTR [rax],al
  600f63:	00 00                	add    BYTE PTR [rax],al
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 fe                	add    dh,bh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  600f72:	40 00 00             	add    BYTE PTR [rax],al
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 ff                	add    bh,bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 01                	add    BYTE PTR [rcx],al
  600f81:	00 00                	add    BYTE PTR [rax],al
  600f83:	00 00                	add    BYTE PTR [rax],al
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 f0                	add    al,dh
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f8d:	00 00                	add    BYTE PTR [rax],al
  600f8f:	00 58 03             	add    BYTE PTR [rax+0x3],bl
  600f92:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 16                	add    BYTE PTR [rsi],dl
  601019:	04 40                	add    al,0x40
  60101b:	00 00                	add    BYTE PTR [rax],al
  60101d:	00 00                	add    BYTE PTR [rax],al
  60101f:	00 26                	add    BYTE PTR [rsi],ah
  601021:	04 40                	add    al,0x40
  601023:	00 00                	add    BYTE PTR [rax],al
  601025:	00 00                	add    BYTE PTR [rax],al
  601027:	00 36                	add    BYTE PTR [rsi],dh
  601029:	04 40                	add    al,0x40
  60102b:	00 00                	add    BYTE PTR [rax],al
  60102d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601030 <__data_start>:
	...

0000000000601038 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601040 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400368>
   a:	74 75                	je     81 <_init-0x40035f>
   c:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
   f:	38 2e                	cmp    BYTE PTR [rsi],ch
  11:	34 2d                	xor    al,0x2d
  13:	32 75 62             	xor    dh,BYTE PTR [rbp+0x62]
  16:	75 6e                	jne    86 <_init-0x40035a>
  18:	74 75                	je     8f <_init-0x400351>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	34 2e                	xor    al,0x2e
  1f:	30 34 2e             	xor    BYTE PTR [rsi+rbp*1],dh
  22:	34 29                	xor    al,0x29
  24:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  27:	38 2e                	cmp    BYTE PTR [rsi],ch
  29:	34 00                	xor    al,0x0
  2b:	55                   	push   rbp
  2c:	62                   	(bad)  
  2d:	75 6e                	jne    9d <_init-0x400343>
  2f:	74 75                	je     a6 <_init-0x40033a>
  31:	20 63 6c             	and    BYTE PTR [rbx+0x6c],ah
  34:	61                   	(bad)  
  35:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  36:	67 20 76 65          	and    BYTE PTR [esi+0x65],dh
  3a:	72 73                	jb     af <_init-0x400331>
  3c:	69 6f 6e 20 33 2e 34 	imul   ebp,DWORD PTR [rdi+0x6e],0x342e3320
  43:	2d 31 75 62 75       	sub    eax,0x75627531
  48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  49:	74 75                	je     c0 <_init-0x400320>
  4b:	33 20                	xor    esp,DWORD PTR [rax]
  4d:	28 74 61 67          	sub    BYTE PTR [rcx+riz*2+0x67],dh
  51:	73 2f                	jae    82 <_init-0x40035e>
  53:	52                   	push   rdx
  54:	45                   	rex.RB
  55:	4c                   	rex.WR
  56:	45                   	rex.RB
  57:	41 53                	push   r11
  59:	45 5f                	rex.RB pop r15
  5b:	33 34 2f             	xor    esi,DWORD PTR [rdi+rbp*1]
  5e:	66 69 6e 61 6c 29    	imul   bp,WORD PTR [rsi+0x61],0x296c
  64:	20 28                	and    BYTE PTR [rax],ch
  66:	62 61                	(bad)  
  68:	73 65                	jae    cf <_init-0x400311>
  6a:	64 20 6f 6e          	and    BYTE PTR fs:[rdi+0x6e],ch
  6e:	20 4c 4c 56          	and    BYTE PTR [rsp+rcx*2+0x56],cl
  72:	4d 20 33             	rex.WRB and BYTE PTR [r11],r14b
  75:	2e 34 29             	cs xor al,0x29
  78:	00 47 43             	add    BYTE PTR [rdi+0x43],al
  7b:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
  7e:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
  81:	75 6e                	jne    f1 <_init-0x4002ef>
  83:	74 75                	je     fa <_init-0x4002e6>
  85:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  88:	38 2e                	cmp    BYTE PTR [rsi],ch
  8a:	34 2d                	xor    al,0x2d
  8c:	32 75 62             	xor    dh,BYTE PTR [rbp+0x62]
  8f:	75 6e                	jne    ff <_init-0x4002e1>
  91:	74 75                	je     108 <_init-0x4002d8>
  93:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  96:	34 2e                	xor    al,0x2e
  98:	30 34 2e             	xor    BYTE PTR [rsi+rbp*1],dh
  9b:	33 29                	xor    ebp,DWORD PTR [rcx]
  9d:	20 34 2e             	and    BYTE PTR [rsi+rbp*1],dh
  a0:	38 2e                	cmp    BYTE PTR [rsi],ch
  a2:	34 00                	xor    al,0x0
