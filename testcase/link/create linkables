DYNAMIC
-------

create c and h file (e.g. test.c / test.h)
compile c file(s) : clang -c test.c -o test.o (gcc -c ... -o ...)

achieve:
	clang -shared -fpic test.c -o libName.so

compile & link:
	clang -c prog.c -o prog 	* #inlcude _.h file in prog.c 
	ld prog -lSystem -L. -lName -o objProgram
	OR
	
	clang prog.c libName.so

run:
	./objProgram 

reference:
	otool -L objProgram


STATIC
------

create c and h file (e.g. test.c / test.h)
compile c file(s) : clang -c test.c -o test.o (gcc -c ... -o ...)

achieve:
	ar -rcs libName.a test.o... / ar -rv libName.a test.o..... * ar -d delite it

compile & link:
	clang -c prog.c -o prog	
	ld program -framework CoreFoundation -lSystem -L. -lName -o objProgram

	clang prog.c libName.a
run:
	./objProgram
symbols:
	nm objProgram
reference:
	otool -L objProgram
