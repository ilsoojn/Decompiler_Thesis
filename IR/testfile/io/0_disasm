
/home/ilsoo/dec/testfile/io/0:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2d3>
 248:	78 38                	js     282 <_init-0x2c6>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 be c2 34 1c 81    	add    %bh,-0x7ee3cb3e(%rsi)
 289:	6e                   	outsb  %ds:(%rsi),(%dx)
 28a:	2a 2f                	sub    (%rdi),%ch
 28c:	82                   	(bad)  
 28d:	8e 00                	mov    (%rax),%es
 28f:	95                   	xchg   %eax,%ebp
 290:	55                   	push   %rbp
 291:	25 7f ca 46 12       	and    $0x1246ca7f,%eax
 296:	5a                   	pop    %rdx
 297:	14                   	.byte 0x14

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	58                   	pop    %rax
 2d1:	00 00                	add    %al,(%rax)
 2d3:	00 20                	add    %ah,(%rax)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 1a                	add    %bl,(%rdx)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 30                	add    %dh,(%rax)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
 31b:	00 20                	add    %ah,(%rax)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 0b                	add    %cl,(%rbx)
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 83 00 00 00 20    	add    %al,0x20000000(%rbx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 21                	add    %ah,(%rcx)
 361:	00 00                	add    %al,(%rax)
 363:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 37c:	63 2e                	movslq (%rsi),%ebp
 37e:	73 6f                	jae    3ef <_init-0x159>
 380:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 385:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 38c:	73 63                	jae    3f1 <_init-0x157>
 38e:	61                   	(bad)  
 38f:	6e                   	outsb  %ds:(%rsi),(%dx)
 390:	66 00 70 72          	data16 add %dh,0x72(%rax)
 394:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 39b:	63 78 61             	movslq 0x61(%rax),%edi
 39e:	5f                   	pop    %rdi
 39f:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3a5:	7a 65                	jp     40c <_init-0x13c>
 3a7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3aa:	6c                   	insb   (%dx),%es:(%rdi)
 3ab:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3b2:	72 74                	jb     428 <_init-0x120>
 3b4:	5f                   	pop    %rdi
 3b5:	6d                   	insl   (%dx),%es:(%rdi)
 3b6:	61                   	(bad)  
 3b7:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 3be:	43 5f                	rex.XB pop %r15
 3c0:	32 2e                	xor    (%rsi),%ch
 3c2:	37                   	(bad)  
 3c3:	00 47 4c             	add    %al,0x4c(%rdi)
 3c6:	49                   	rex.WB
 3c7:	42                   	rex.X
 3c8:	43 5f                	rex.XB pop %r15
 3ca:	32 2e                	xor    (%rsi),%ch
 3cc:	32 2e                	xor    (%rsi),%ch
 3ce:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3d3:	4d 5f                	rex.WRB pop %r15
 3d5:	64 65 72 65          	fs gs jb 43e <_init-0x10a>
 3d9:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3e0:	4d 
 3e1:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3e3:	6f                   	outsl  %ds:(%rsi),(%dx)
 3e4:	6e                   	outsb  %ds:(%rsi),(%dx)
 3e5:	65 54                	gs push %rsp
 3e7:	61                   	(bad)  
 3e8:	62                   	(bad)  
 3e9:	6c                   	insb   (%dx),%es:(%rdi)
 3ea:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3ee:	67 6d                	insl   (%dx),%es:(%edi)
 3f0:	6f                   	outsl  %ds:(%rsi),(%dx)
 3f1:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f2:	5f                   	pop    %rdi
 3f3:	73 74                	jae    469 <_init-0xdf>
 3f5:	61                   	(bad)  
 3f6:	72 74                	jb     46c <_init-0xdc>
 3f8:	5f                   	pop    %rdi
 3f9:	5f                   	pop    %rdi
 3fa:	00 5f 49             	add    %bl,0x49(%rdi)
 3fd:	54                   	push   %rsp
 3fe:	4d 5f                	rex.WRB pop %r15
 400:	72 65                	jb     467 <_init-0xe1>
 402:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 409:	4d 
 40a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 40c:	6f                   	outsl  %ds:(%rsi),(%dx)
 40d:	6e                   	outsb  %ds:(%rsi),(%dx)
 40e:	65 54                	gs push %rsp
 410:	61                   	(bad)  
 411:	62                   	.byte 0x62
 412:	6c                   	insb   (%dx),%es:(%rdi)
 413:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000416 <.gnu.version>:
 416:	00 00                	add    %al,(%rax)
 418:	00 00                	add    %al,(%rax)
 41a:	02 00                	add    (%rax),%al
 41c:	02 00                	add    (%rax),%al
 41e:	00 00                	add    %al,(%rax)
 420:	03 00                	add    (%rax),%eax
 422:	00 00                	add    %al,(%rax)
 424:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000428 <.gnu.version_r>:
 428:	01 00                	add    %eax,(%rax)
 42a:	02 00                	add    (%rax),%al
 42c:	01 00                	add    %eax,(%rax)
 42e:	00 00                	add    %al,(%rax)
 430:	10 00                	adc    %al,(%rax)
 432:	00 00                	add    %al,(%rax)
 434:	00 00                	add    %al,(%rax)
 436:	00 00                	add    %al,(%rax)
 438:	17                   	(bad)  
 439:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%rcx),%ebp
 440:	42 00 00             	rex.X add %al,(%rax)
 443:	00 10                	add    %dl,(%rax)
 445:	00 00                	add    %al,(%rax)
 447:	00 75 1a             	add    %dh,0x1a(%rbp)
 44a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 450:	4c 00 00             	rex.WR add %r8b,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	b0 0d                	mov    $0xd,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	a0 06 00 00 00 00 00 	movabs 0xb800000000000006,%al
 46f:	00 b8 
 471:	0d 20 00 00 00       	or     $0x20,%eax
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	60                   	(bad)  
 481:	06                   	(bad)  
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 10                	or     %dl,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	08 10                	or     %dl,(%rax)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	d8 0f                	fmuls  (%rdi)
 4a2:	20 00                	and    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 01                	add    %al,(%rcx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e0                	add    %ah,%al
 4b9:	0f 20 00             	mov    %cr0,%rax
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	06                   	(bad)  
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 03                	add    %al,(%rbx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 e8                	add    %ch,%al
 4d1:	0f 20 00             	mov    %cr0,%rax
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	06                   	(bad)  
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4e6:	00 00                	add    %al,(%rax)
 4e8:	f0 0f 20 00          	lock mov %cr0,%rax
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 06                	add    %al,(%rsi)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 f8                	add    %bh,%al
 501:	0f 20 00             	mov    %cr0,%rax
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	06                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000518 <.rela.plt>:
 518:	c8 0f 20 00          	enterq $0x200f,$0x0
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	07                   	(bad)  
 521:	00 00                	add    %al,(%rax)
 523:	00 02                	add    %al,(%rdx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 d0                	add    %dl,%al
 531:	0f 20 00             	mov    %cr0,%rax
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	07                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 541 <_init-0x7>
 541:	00 00                	add    %al,(%rax)
 543:	00 00                	add    %al,(%rax)
 545:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000000548 <_init>:
 548:	48 83 ec 08          	sub    $0x8,%rsp
 54c:	48 8b 05 95 0a 20 00 	mov    0x200a95(%rip),%rax        # 200fe8 <__gmon_start__>
 553:	48 85 c0             	test   %rax,%rax
 556:	74 02                	je     55a <_init+0x12>
 558:	ff d0                	callq  *%rax
 55a:	48 83 c4 08          	add    $0x8,%rsp
 55e:	c3                   	retq   

Disassembly of section .plt:

0000000000000560 <.plt>:
 560:	ff 35 52 0a 20 00    	pushq  0x200a52(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 566:	ff 25 54 0a 20 00    	jmpq   *0x200a54(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 56c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000570 <printf@plt>:
 570:	ff 25 52 0a 20 00    	jmpq   *0x200a52(%rip)        # 200fc8 <printf@GLIBC_2.2.5>
 576:	68 00 00 00 00       	pushq  $0x0
 57b:	e9 e0 ff ff ff       	jmpq   560 <.plt>

0000000000000580 <__isoc99_scanf@plt>:
 580:	ff 25 4a 0a 20 00    	jmpq   *0x200a4a(%rip)        # 200fd0 <__isoc99_scanf@GLIBC_2.7>
 586:	68 01 00 00 00       	pushq  $0x1
 58b:	e9 d0 ff ff ff       	jmpq   560 <.plt>

Disassembly of section .plt.got:

0000000000000590 <__cxa_finalize@plt>:
 590:	ff 25 62 0a 20 00    	jmpq   *0x200a62(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 596:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005a0 <_start>:
 5a0:	31 ed                	xor    %ebp,%ebp
 5a2:	49 89 d1             	mov    %rdx,%r9
 5a5:	5e                   	pop    %rsi
 5a6:	48 89 e2             	mov    %rsp,%rdx
 5a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5ad:	50                   	push   %rax
 5ae:	54                   	push   %rsp
 5af:	4c 8d 05 9a 01 00 00 	lea    0x19a(%rip),%r8        # 750 <__libc_csu_fini>
 5b6:	48 8d 0d 23 01 00 00 	lea    0x123(%rip),%rcx        # 6e0 <__libc_csu_init>
 5bd:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 6aa <main>
 5c4:	ff 15 16 0a 20 00    	callq  *0x200a16(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5ca:	f4                   	hlt    
 5cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005d0 <deregister_tm_clones>:
 5d0:	48 8d 3d 39 0a 20 00 	lea    0x200a39(%rip),%rdi        # 201010 <__TMC_END__>
 5d7:	55                   	push   %rbp
 5d8:	48 8d 05 31 0a 20 00 	lea    0x200a31(%rip),%rax        # 201010 <__TMC_END__>
 5df:	48 39 f8             	cmp    %rdi,%rax
 5e2:	48 89 e5             	mov    %rsp,%rbp
 5e5:	74 19                	je     600 <deregister_tm_clones+0x30>
 5e7:	48 8b 05 ea 09 20 00 	mov    0x2009ea(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 5ee:	48 85 c0             	test   %rax,%rax
 5f1:	74 0d                	je     600 <deregister_tm_clones+0x30>
 5f3:	5d                   	pop    %rbp
 5f4:	ff e0                	jmpq   *%rax
 5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5fd:	00 00 00 
 600:	5d                   	pop    %rbp
 601:	c3                   	retq   
 602:	0f 1f 40 00          	nopl   0x0(%rax)
 606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 60d:	00 00 00 

0000000000000610 <register_tm_clones>:
 610:	48 8d 3d f9 09 20 00 	lea    0x2009f9(%rip),%rdi        # 201010 <__TMC_END__>
 617:	48 8d 35 f2 09 20 00 	lea    0x2009f2(%rip),%rsi        # 201010 <__TMC_END__>
 61e:	55                   	push   %rbp
 61f:	48 29 fe             	sub    %rdi,%rsi
 622:	48 89 e5             	mov    %rsp,%rbp
 625:	48 c1 fe 03          	sar    $0x3,%rsi
 629:	48 89 f0             	mov    %rsi,%rax
 62c:	48 c1 e8 3f          	shr    $0x3f,%rax
 630:	48 01 c6             	add    %rax,%rsi
 633:	48 d1 fe             	sar    %rsi
 636:	74 18                	je     650 <register_tm_clones+0x40>
 638:	48 8b 05 b1 09 20 00 	mov    0x2009b1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 63f:	48 85 c0             	test   %rax,%rax
 642:	74 0c                	je     650 <register_tm_clones+0x40>
 644:	5d                   	pop    %rbp
 645:	ff e0                	jmpq   *%rax
 647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 64e:	00 00 
 650:	5d                   	pop    %rbp
 651:	c3                   	retq   
 652:	0f 1f 40 00          	nopl   0x0(%rax)
 656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 65d:	00 00 00 

0000000000000660 <__do_global_dtors_aux>:
 660:	80 3d a9 09 20 00 00 	cmpb   $0x0,0x2009a9(%rip)        # 201010 <__TMC_END__>
 667:	75 2f                	jne    698 <__do_global_dtors_aux+0x38>
 669:	48 83 3d 87 09 20 00 	cmpq   $0x0,0x200987(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 670:	00 
 671:	55                   	push   %rbp
 672:	48 89 e5             	mov    %rsp,%rbp
 675:	74 0c                	je     683 <__do_global_dtors_aux+0x23>
 677:	48 8b 3d 8a 09 20 00 	mov    0x20098a(%rip),%rdi        # 201008 <__dso_handle>
 67e:	e8 0d ff ff ff       	callq  590 <__cxa_finalize@plt>
 683:	e8 48 ff ff ff       	callq  5d0 <deregister_tm_clones>
 688:	c6 05 81 09 20 00 01 	movb   $0x1,0x200981(%rip)        # 201010 <__TMC_END__>
 68f:	5d                   	pop    %rbp
 690:	c3                   	retq   
 691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 698:	f3 c3                	repz retq 
 69a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006a0 <frame_dummy>:
 6a0:	55                   	push   %rbp
 6a1:	48 89 e5             	mov    %rsp,%rbp
 6a4:	5d                   	pop    %rbp
 6a5:	e9 66 ff ff ff       	jmpq   610 <register_tm_clones>

00000000000006aa <main>:
 6aa:	55                   	push   %rbp
 6ab:	48 89 e5             	mov    %rsp,%rbp
 6ae:	48 8d 3d af 00 00 00 	lea    0xaf(%rip),%rdi        # 764 <_IO_stdin_used+0x4>
 6b5:	b8 00 00 00 00       	mov    $0x0,%eax
 6ba:	e8 b1 fe ff ff       	callq  570 <printf@plt>
 6bf:	48 8d 3d ab 00 00 00 	lea    0xab(%rip),%rdi        # 771 <_IO_stdin_used+0x11>
 6c6:	b8 00 00 00 00       	mov    $0x0,%eax
 6cb:	e8 b0 fe ff ff       	callq  580 <__isoc99_scanf@plt>
 6d0:	b8 00 00 00 00       	mov    $0x0,%eax
 6d5:	5d                   	pop    %rbp
 6d6:	c3                   	retq   
 6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6de:	00 00 

00000000000006e0 <__libc_csu_init>:
 6e0:	41 57                	push   %r15
 6e2:	41 56                	push   %r14
 6e4:	49 89 d7             	mov    %rdx,%r15
 6e7:	41 55                	push   %r13
 6e9:	41 54                	push   %r12
 6eb:	4c 8d 25 be 06 20 00 	lea    0x2006be(%rip),%r12        # 200db0 <__frame_dummy_init_array_entry>
 6f2:	55                   	push   %rbp
 6f3:	48 8d 2d be 06 20 00 	lea    0x2006be(%rip),%rbp        # 200db8 <__init_array_end>
 6fa:	53                   	push   %rbx
 6fb:	41 89 fd             	mov    %edi,%r13d
 6fe:	49 89 f6             	mov    %rsi,%r14
 701:	4c 29 e5             	sub    %r12,%rbp
 704:	48 83 ec 08          	sub    $0x8,%rsp
 708:	48 c1 fd 03          	sar    $0x3,%rbp
 70c:	e8 37 fe ff ff       	callq  548 <_init>
 711:	48 85 ed             	test   %rbp,%rbp
 714:	74 20                	je     736 <__libc_csu_init+0x56>
 716:	31 db                	xor    %ebx,%ebx
 718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 71f:	00 
 720:	4c 89 fa             	mov    %r15,%rdx
 723:	4c 89 f6             	mov    %r14,%rsi
 726:	44 89 ef             	mov    %r13d,%edi
 729:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 72d:	48 83 c3 01          	add    $0x1,%rbx
 731:	48 39 dd             	cmp    %rbx,%rbp
 734:	75 ea                	jne    720 <__libc_csu_init+0x40>
 736:	48 83 c4 08          	add    $0x8,%rsp
 73a:	5b                   	pop    %rbx
 73b:	5d                   	pop    %rbp
 73c:	41 5c                	pop    %r12
 73e:	41 5d                	pop    %r13
 740:	41 5e                	pop    %r14
 742:	41 5f                	pop    %r15
 744:	c3                   	retq   
 745:	90                   	nop
 746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 74d:	00 00 00 

0000000000000750 <__libc_csu_fini>:
 750:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000754 <_fini>:
 754:	48 83 ec 08          	sub    $0x8,%rsp
 758:	48 83 c4 08          	add    $0x8,%rsp
 75c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000760 <_IO_stdin_used>:
 760:	01 00                	add    %eax,(%rax)
 762:	02 00                	add    (%rax),%al
 764:	48                   	rex.W
 765:	45                   	rex.RB
 766:	4c                   	rex.WR
 767:	4c                   	rex.WR
 768:	4f 20 57 4f          	rex.WRXB and %r10b,0x4f(%r15)
 76c:	52                   	push   %rdx
 76d:	4c                   	rex.WR
 76e:	44 21 00             	and    %r8d,(%rax)
 771:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
 776:	20 77 6f             	and    %dh,0x6f(%rdi)
 779:	72 6c                	jb     7e7 <__GNU_EH_FRAME_HDR+0x67>
 77b:	64 21 00             	and    %eax,%fs:(%rax)

Disassembly of section .eh_frame_hdr:

0000000000000780 <__GNU_EH_FRAME_HDR>:
 780:	01 1b                	add    %ebx,(%rbx)
 782:	03 3b                	add    (%rbx),%edi
 784:	3c 00                	cmp    $0x0,%al
 786:	00 00                	add    %al,(%rax)
 788:	06                   	(bad)  
 789:	00 00                	add    %al,(%rax)
 78b:	00 e0                	add    %ah,%al
 78d:	fd                   	std    
 78e:	ff                   	(bad)  
 78f:	ff 88 00 00 00 10    	decl   0x10000000(%rax)
 795:	fe                   	(bad)  
 796:	ff                   	(bad)  
 797:	ff b0 00 00 00 20    	pushq  0x20000000(%rax)
 79d:	fe                   	(bad)  
 79e:	ff                   	(bad)  
 79f:	ff 58 00             	lcall  *0x0(%rax)
 7a2:	00 00                	add    %al,(%rax)
 7a4:	2a ff                	sub    %bh,%bh
 7a6:	ff                   	(bad)  
 7a7:	ff c8                	dec    %eax
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 60 ff             	add    %ah,-0x1(%rax)
 7ae:	ff                   	(bad)  
 7af:	ff                   	(bad)  
 7b0:	e8 00 00 00 d0       	callq  ffffffffd00007b5 <_end+0xffffffffcfdff79d>
 7b5:	ff                   	(bad)  
 7b6:	ff                   	(bad)  
 7b7:	ff 30                	pushq  (%rax)
 7b9:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

00000000000007c0 <__FRAME_END__-0x104>:
 7c0:	14 00                	adc    $0x0,%al
 7c2:	00 00                	add    %al,(%rax)
 7c4:	00 00                	add    %al,(%rax)
 7c6:	00 00                	add    %al,(%rax)
 7c8:	01 7a 52             	add    %edi,0x52(%rdx)
 7cb:	00 01                	add    %al,(%rcx)
 7cd:	78 10                	js     7df <__GNU_EH_FRAME_HDR+0x5f>
 7cf:	01 1b                	add    %ebx,(%rbx)
 7d1:	0c 07                	or     $0x7,%al
 7d3:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 1c 00             	add    %bl,(%rax,%rax,1)
 7de:	00 00                	add    %al,(%rax)
 7e0:	c0 fd ff             	sar    $0xff,%ch
 7e3:	ff 2b                	ljmp   *(%rbx)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 14 00             	add    %dl,(%rax,%rax,1)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	01 7a 52             	add    %edi,0x52(%rdx)
 7fb:	00 01                	add    %al,(%rcx)
 7fd:	78 10                	js     80f <__GNU_EH_FRAME_HDR+0x8f>
 7ff:	01 1b                	add    %ebx,(%rbx)
 801:	0c 07                	or     $0x7,%al
 803:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 809:	00 00                	add    %al,(%rax)
 80b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 80e:	00 00                	add    %al,(%rax)
 810:	50                   	push   %rax
 811:	fd                   	std    
 812:	ff                   	(bad)  
 813:	ff 30                	pushq  (%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 00                	add    %al,(%rax)
 819:	0e                   	(bad)  
 81a:	10 46 0e             	adc    %al,0xe(%rsi)
 81d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 820:	0b 77 08             	or     0x8(%rdi),%esi
 823:	80 00 3f             	addb   $0x3f,(%rax)
 826:	1a 3b                	sbb    (%rbx),%bh
 828:	2a 33                	sub    (%rbx),%dh
 82a:	24 22                	and    $0x22,%al
 82c:	00 00                	add    %al,(%rax)
 82e:	00 00                	add    %al,(%rax)
 830:	14 00                	adc    $0x0,%al
 832:	00 00                	add    %al,(%rax)
 834:	44 00 00             	add    %r8b,(%rax)
 837:	00 58 fd             	add    %bl,-0x3(%rax)
 83a:	ff                   	(bad)  
 83b:	ff 08                	decl   (%rax)
	...
 845:	00 00                	add    %al,(%rax)
 847:	00 1c 00             	add    %bl,(%rax,%rax,1)
 84a:	00 00                	add    %al,(%rax)
 84c:	5c                   	pop    %rsp
 84d:	00 00                	add    %al,(%rax)
 84f:	00 5a fe             	add    %bl,-0x2(%rdx)
 852:	ff                   	(bad)  
 853:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 859 <__GNU_EH_FRAME_HDR+0xd9>
 859:	41 0e                	rex.B (bad) 
 85b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 861:	68 0c 07 08 00       	pushq  $0x8070c
 866:	00 00                	add    %al,(%rax)
 868:	44 00 00             	add    %r8b,(%rax)
 86b:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 86f:	00 70 fe             	add    %dh,-0x2(%rax)
 872:	ff                   	(bad)  
 873:	ff 65 00             	jmpq   *0x0(%rbp)
 876:	00 00                	add    %al,(%rax)
 878:	00 42 0e             	add    %al,0xe(%rdx)
 87b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 881:	8e 03                	mov    (%rbx),%es
 883:	45 0e                	rex.RB (bad) 
 885:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 88b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff863016d9 <_end+0xffffffff861006c1>
 891:	06                   	(bad)  
 892:	48 0e                	rex.W (bad) 
 894:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 89a:	72 0e                	jb     8aa <__GNU_EH_FRAME_HDR+0x12a>
 89c:	38 41 0e             	cmp    %al,0xe(%rcx)
 89f:	30 41 0e             	xor    %al,0xe(%rcx)
 8a2:	28 42 0e             	sub    %al,0xe(%rdx)
 8a5:	20 42 0e             	and    %al,0xe(%rdx)
 8a8:	18 42 0e             	sbb    %al,0xe(%rdx)
 8ab:	10 42 0e             	adc    %al,0xe(%rdx)
 8ae:	08 00                	or     %al,(%rax)
 8b0:	10 00                	adc    %al,(%rax)
 8b2:	00 00                	add    %al,(%rax)
 8b4:	c4                   	(bad)  
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 98 fe ff ff 02    	add    %bl,0x2fffffe(%rax)
 8bd:	00 00                	add    %al,(%rax)
 8bf:	00 00                	add    %al,(%rax)
 8c1:	00 00                	add    %al,(%rax)
	...

00000000000008c4 <__FRAME_END__>:
 8c4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200db0 <__frame_dummy_init_array_entry>:
  200db0:	a0                   	.byte 0xa0
  200db1:	06                   	(bad)  
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200db8 <__do_global_dtors_aux_fini_array_entry>:
  200db8:	60                   	(bad)  
  200db9:	06                   	(bad)  
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200dc0 <_DYNAMIC>:
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	01 00                	add    %eax,(%rax)
  200dca:	00 00                	add    %al,(%rax)
  200dcc:	00 00                	add    %al,(%rax)
  200dce:	00 00                	add    %al,(%rax)
  200dd0:	0c 00                	or     $0x0,%al
  200dd2:	00 00                	add    %al,(%rax)
  200dd4:	00 00                	add    %al,(%rax)
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	48 05 00 00 00 00    	add    $0x0,%rax
  200dde:	00 00                	add    %al,(%rax)
  200de0:	0d 00 00 00 00       	or     $0x0,%eax
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 54 07 00          	add    %dl,0x0(%rdi,%rax,1)
  200deb:	00 00                	add    %al,(%rax)
  200ded:	00 00                	add    %al,(%rax)
  200def:	00 19                	add    %bl,(%rcx)
  200df1:	00 00                	add    %al,(%rax)
  200df3:	00 00                	add    %al,(%rax)
  200df5:	00 00                	add    %al,(%rax)
  200df7:	00 b0 0d 20 00 00    	add    %dh,0x200d(%rax)
  200dfd:	00 00                	add    %al,(%rax)
  200dff:	00 1b                	add    %bl,(%rbx)
  200e01:	00 00                	add    %al,(%rax)
  200e03:	00 00                	add    %al,(%rax)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 08                	add    %cl,(%rax)
  200e09:	00 00                	add    %al,(%rax)
  200e0b:	00 00                	add    %al,(%rax)
  200e0d:	00 00                	add    %al,(%rax)
  200e0f:	00 1a                	add    %bl,(%rdx)
  200e11:	00 00                	add    %al,(%rax)
  200e13:	00 00                	add    %al,(%rax)
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 b8 0d 20 00 00    	add    %bh,0x200d(%rax)
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	08 00                	or     %al,(%rax)
  200e2a:	00 00                	add    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	f5                   	cmc    
  200e31:	fe                   	(bad)  
  200e32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e45 <_DYNAMIC+0x85>
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 78 03             	add    %bh,0x3(%rax)
  200e4a:	00 00                	add    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	06                   	(bad)  
  200e51:	00 00                	add    %al,(%rax)
  200e53:	00 00                	add    %al,(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 0a                	add    %cl,(%rdx)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 9d 00 00 00 00    	add    %bl,0x0(%rbp)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 0b                	add    %cl,(%rbx)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 18                	add    %bl,(%rax)
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e85 <_DYNAMIC+0xc5>
	...
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 03                	add    %al,(%rbx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 b0 0f 20 00 00    	add    %dh,0x200f(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 02                	add    %al,(%rdx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 30                	add    %dh,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 17                	add    %dl,(%rdi)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 18                	add    %bl,(%rax)
  200ec9:	05 00 00 00 00       	add    $0x0,%eax
  200ece:	00 00                	add    %al,(%rax)
  200ed0:	07                   	(bad)  
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 58 04             	add    %bl,0x4(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	08 00                	or     %al,(%rax)
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	c0 00 00             	rolb   $0x0,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 09                	add    %cl,(%rcx)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 18                	add    %bl,(%rax)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 1e                	add    %bl,(%rsi)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 08                	add    %cl,(%rax)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 fb                	add    %bh,%bl
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 01                	add    %al,(%rcx)
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	08 00                	or     %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 fe                	add    %bh,%dh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 28                	add    %ch,(%rax)
  200f29:	04 00                	add    $0x0,%al
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 ff                	add    %bh,%bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 01                	add    %al,(%rcx)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 f0                	add    %dh,%al
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 16                	add    %dl,(%rsi)
  200f49:	04 00                	add    $0x0,%al
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f9                	add    %bh,%cl
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fb0 <_GLOBAL_OFFSET_TABLE_>:
  200fb0:	c0 0d 20 00 00 00 00 	rorb   $0x0,0x20(%rip)        # 200fd7 <_GLOBAL_OFFSET_TABLE_+0x27>
	...
  200fc7:	00 76 05             	add    %dh,0x5(%rsi)
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	86 05 00 00 00 00    	xchg   %al,0x0(%rip)        # 200fd6 <_GLOBAL_OFFSET_TABLE_+0x26>
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4d0>
   a:	74 75                	je     81 <_init-0x4c7>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 32 37 75 62    	xor    %ch,0x62753732(%rip)        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x4c1>
  19:	74 75                	je     90 <_init-0x4b8>
  1b:	31 7e 31             	xor    %edi,0x31(%rsi)
  1e:	38 2e                	cmp    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 37                	and    %dh,(%rdi)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)

/home/ilsoo/dec/IR/testfile/io/0:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2d3>
 248:	78 38                	js     282 <_init-0x2c6>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 be c2 34 1c 81    	add    %bh,-0x7ee3cb3e(%rsi)
 289:	6e                   	outsb  %ds:(%rsi),(%dx)
 28a:	2a 2f                	sub    (%rdi),%ch
 28c:	82                   	(bad)  
 28d:	8e 00                	mov    (%rax),%es
 28f:	95                   	xchg   %eax,%ebp
 290:	55                   	push   %rbp
 291:	25 7f ca 46 12       	and    $0x1246ca7f,%eax
 296:	5a                   	pop    %rdx
 297:	14                   	.byte 0x14

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	58                   	pop    %rax
 2d1:	00 00                	add    %al,(%rax)
 2d3:	00 20                	add    %ah,(%rax)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 1a                	add    %bl,(%rdx)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 30                	add    %dh,(%rax)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
 31b:	00 20                	add    %ah,(%rax)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 0b                	add    %cl,(%rbx)
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 83 00 00 00 20    	add    %al,0x20000000(%rbx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 21                	add    %ah,(%rcx)
 361:	00 00                	add    %al,(%rax)
 363:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 37c:	63 2e                	movslq (%rsi),%ebp
 37e:	73 6f                	jae    3ef <_init-0x159>
 380:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 385:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 38c:	73 63                	jae    3f1 <_init-0x157>
 38e:	61                   	(bad)  
 38f:	6e                   	outsb  %ds:(%rsi),(%dx)
 390:	66 00 70 72          	data16 add %dh,0x72(%rax)
 394:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 39b:	63 78 61             	movslq 0x61(%rax),%edi
 39e:	5f                   	pop    %rdi
 39f:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3a5:	7a 65                	jp     40c <_init-0x13c>
 3a7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3aa:	6c                   	insb   (%dx),%es:(%rdi)
 3ab:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3b2:	72 74                	jb     428 <_init-0x120>
 3b4:	5f                   	pop    %rdi
 3b5:	6d                   	insl   (%dx),%es:(%rdi)
 3b6:	61                   	(bad)  
 3b7:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 3be:	43 5f                	rex.XB pop %r15
 3c0:	32 2e                	xor    (%rsi),%ch
 3c2:	37                   	(bad)  
 3c3:	00 47 4c             	add    %al,0x4c(%rdi)
 3c6:	49                   	rex.WB
 3c7:	42                   	rex.X
 3c8:	43 5f                	rex.XB pop %r15
 3ca:	32 2e                	xor    (%rsi),%ch
 3cc:	32 2e                	xor    (%rsi),%ch
 3ce:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3d3:	4d 5f                	rex.WRB pop %r15
 3d5:	64 65 72 65          	fs gs jb 43e <_init-0x10a>
 3d9:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3e0:	4d 
 3e1:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3e3:	6f                   	outsl  %ds:(%rsi),(%dx)
 3e4:	6e                   	outsb  %ds:(%rsi),(%dx)
 3e5:	65 54                	gs push %rsp
 3e7:	61                   	(bad)  
 3e8:	62                   	(bad)  
 3e9:	6c                   	insb   (%dx),%es:(%rdi)
 3ea:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3ee:	67 6d                	insl   (%dx),%es:(%edi)
 3f0:	6f                   	outsl  %ds:(%rsi),(%dx)
 3f1:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f2:	5f                   	pop    %rdi
 3f3:	73 74                	jae    469 <_init-0xdf>
 3f5:	61                   	(bad)  
 3f6:	72 74                	jb     46c <_init-0xdc>
 3f8:	5f                   	pop    %rdi
 3f9:	5f                   	pop    %rdi
 3fa:	00 5f 49             	add    %bl,0x49(%rdi)
 3fd:	54                   	push   %rsp
 3fe:	4d 5f                	rex.WRB pop %r15
 400:	72 65                	jb     467 <_init-0xe1>
 402:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 409:	4d 
 40a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 40c:	6f                   	outsl  %ds:(%rsi),(%dx)
 40d:	6e                   	outsb  %ds:(%rsi),(%dx)
 40e:	65 54                	gs push %rsp
 410:	61                   	(bad)  
 411:	62                   	.byte 0x62
 412:	6c                   	insb   (%dx),%es:(%rdi)
 413:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000416 <.gnu.version>:
 416:	00 00                	add    %al,(%rax)
 418:	00 00                	add    %al,(%rax)
 41a:	02 00                	add    (%rax),%al
 41c:	02 00                	add    (%rax),%al
 41e:	00 00                	add    %al,(%rax)
 420:	03 00                	add    (%rax),%eax
 422:	00 00                	add    %al,(%rax)
 424:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000428 <.gnu.version_r>:
 428:	01 00                	add    %eax,(%rax)
 42a:	02 00                	add    (%rax),%al
 42c:	01 00                	add    %eax,(%rax)
 42e:	00 00                	add    %al,(%rax)
 430:	10 00                	adc    %al,(%rax)
 432:	00 00                	add    %al,(%rax)
 434:	00 00                	add    %al,(%rax)
 436:	00 00                	add    %al,(%rax)
 438:	17                   	(bad)  
 439:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%rcx),%ebp
 440:	42 00 00             	rex.X add %al,(%rax)
 443:	00 10                	add    %dl,(%rax)
 445:	00 00                	add    %al,(%rax)
 447:	00 75 1a             	add    %dh,0x1a(%rbp)
 44a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 450:	4c 00 00             	rex.WR add %r8b,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	b0 0d                	mov    $0xd,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	a0 06 00 00 00 00 00 	movabs 0xb800000000000006,%al
 46f:	00 b8 
 471:	0d 20 00 00 00       	or     $0x20,%eax
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	60                   	(bad)  
 481:	06                   	(bad)  
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 10                	or     %dl,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	08 10                	or     %dl,(%rax)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	d8 0f                	fmuls  (%rdi)
 4a2:	20 00                	and    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 01                	add    %al,(%rcx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e0                	add    %ah,%al
 4b9:	0f 20 00             	mov    %cr0,%rax
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	06                   	(bad)  
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 03                	add    %al,(%rbx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 e8                	add    %ch,%al
 4d1:	0f 20 00             	mov    %cr0,%rax
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	06                   	(bad)  
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4e6:	00 00                	add    %al,(%rax)
 4e8:	f0 0f 20 00          	lock mov %cr0,%rax
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 06                	add    %al,(%rsi)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 f8                	add    %bh,%al
 501:	0f 20 00             	mov    %cr0,%rax
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	06                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000518 <.rela.plt>:
 518:	c8 0f 20 00          	enterq $0x200f,$0x0
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	07                   	(bad)  
 521:	00 00                	add    %al,(%rax)
 523:	00 02                	add    %al,(%rdx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 d0                	add    %dl,%al
 531:	0f 20 00             	mov    %cr0,%rax
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	07                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 541 <_init-0x7>
 541:	00 00                	add    %al,(%rax)
 543:	00 00                	add    %al,(%rax)
 545:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000000548 <_init>:
 548:	48 83 ec 08          	sub    $0x8,%rsp
 54c:	48 8b 05 95 0a 20 00 	mov    0x200a95(%rip),%rax        # 200fe8 <__gmon_start__>
 553:	48 85 c0             	test   %rax,%rax
 556:	74 02                	je     55a <_init+0x12>
 558:	ff d0                	callq  *%rax
 55a:	48 83 c4 08          	add    $0x8,%rsp
 55e:	c3                   	retq   

Disassembly of section .plt:

0000000000000560 <.plt>:
 560:	ff 35 52 0a 20 00    	pushq  0x200a52(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 566:	ff 25 54 0a 20 00    	jmpq   *0x200a54(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 56c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000570 <printf@plt>:
 570:	ff 25 52 0a 20 00    	jmpq   *0x200a52(%rip)        # 200fc8 <printf@GLIBC_2.2.5>
 576:	68 00 00 00 00       	pushq  $0x0
 57b:	e9 e0 ff ff ff       	jmpq   560 <.plt>

0000000000000580 <__isoc99_scanf@plt>:
 580:	ff 25 4a 0a 20 00    	jmpq   *0x200a4a(%rip)        # 200fd0 <__isoc99_scanf@GLIBC_2.7>
 586:	68 01 00 00 00       	pushq  $0x1
 58b:	e9 d0 ff ff ff       	jmpq   560 <.plt>

Disassembly of section .plt.got:

0000000000000590 <__cxa_finalize@plt>:
 590:	ff 25 62 0a 20 00    	jmpq   *0x200a62(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 596:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005a0 <_start>:
 5a0:	31 ed                	xor    %ebp,%ebp
 5a2:	49 89 d1             	mov    %rdx,%r9
 5a5:	5e                   	pop    %rsi
 5a6:	48 89 e2             	mov    %rsp,%rdx
 5a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5ad:	50                   	push   %rax
 5ae:	54                   	push   %rsp
 5af:	4c 8d 05 9a 01 00 00 	lea    0x19a(%rip),%r8        # 750 <__libc_csu_fini>
 5b6:	48 8d 0d 23 01 00 00 	lea    0x123(%rip),%rcx        # 6e0 <__libc_csu_init>
 5bd:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 6aa <main>
 5c4:	ff 15 16 0a 20 00    	callq  *0x200a16(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5ca:	f4                   	hlt    
 5cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005d0 <deregister_tm_clones>:
 5d0:	48 8d 3d 39 0a 20 00 	lea    0x200a39(%rip),%rdi        # 201010 <__TMC_END__>
 5d7:	55                   	push   %rbp
 5d8:	48 8d 05 31 0a 20 00 	lea    0x200a31(%rip),%rax        # 201010 <__TMC_END__>
 5df:	48 39 f8             	cmp    %rdi,%rax
 5e2:	48 89 e5             	mov    %rsp,%rbp
 5e5:	74 19                	je     600 <deregister_tm_clones+0x30>
 5e7:	48 8b 05 ea 09 20 00 	mov    0x2009ea(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 5ee:	48 85 c0             	test   %rax,%rax
 5f1:	74 0d                	je     600 <deregister_tm_clones+0x30>
 5f3:	5d                   	pop    %rbp
 5f4:	ff e0                	jmpq   *%rax
 5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5fd:	00 00 00 
 600:	5d                   	pop    %rbp
 601:	c3                   	retq   
 602:	0f 1f 40 00          	nopl   0x0(%rax)
 606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 60d:	00 00 00 

0000000000000610 <register_tm_clones>:
 610:	48 8d 3d f9 09 20 00 	lea    0x2009f9(%rip),%rdi        # 201010 <__TMC_END__>
 617:	48 8d 35 f2 09 20 00 	lea    0x2009f2(%rip),%rsi        # 201010 <__TMC_END__>
 61e:	55                   	push   %rbp
 61f:	48 29 fe             	sub    %rdi,%rsi
 622:	48 89 e5             	mov    %rsp,%rbp
 625:	48 c1 fe 03          	sar    $0x3,%rsi
 629:	48 89 f0             	mov    %rsi,%rax
 62c:	48 c1 e8 3f          	shr    $0x3f,%rax
 630:	48 01 c6             	add    %rax,%rsi
 633:	48 d1 fe             	sar    %rsi
 636:	74 18                	je     650 <register_tm_clones+0x40>
 638:	48 8b 05 b1 09 20 00 	mov    0x2009b1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 63f:	48 85 c0             	test   %rax,%rax
 642:	74 0c                	je     650 <register_tm_clones+0x40>
 644:	5d                   	pop    %rbp
 645:	ff e0                	jmpq   *%rax
 647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 64e:	00 00 
 650:	5d                   	pop    %rbp
 651:	c3                   	retq   
 652:	0f 1f 40 00          	nopl   0x0(%rax)
 656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 65d:	00 00 00 

0000000000000660 <__do_global_dtors_aux>:
 660:	80 3d a9 09 20 00 00 	cmpb   $0x0,0x2009a9(%rip)        # 201010 <__TMC_END__>
 667:	75 2f                	jne    698 <__do_global_dtors_aux+0x38>
 669:	48 83 3d 87 09 20 00 	cmpq   $0x0,0x200987(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 670:	00 
 671:	55                   	push   %rbp
 672:	48 89 e5             	mov    %rsp,%rbp
 675:	74 0c                	je     683 <__do_global_dtors_aux+0x23>
 677:	48 8b 3d 8a 09 20 00 	mov    0x20098a(%rip),%rdi        # 201008 <__dso_handle>
 67e:	e8 0d ff ff ff       	callq  590 <__cxa_finalize@plt>
 683:	e8 48 ff ff ff       	callq  5d0 <deregister_tm_clones>
 688:	c6 05 81 09 20 00 01 	movb   $0x1,0x200981(%rip)        # 201010 <__TMC_END__>
 68f:	5d                   	pop    %rbp
 690:	c3                   	retq   
 691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 698:	f3 c3                	repz retq 
 69a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006a0 <frame_dummy>:
 6a0:	55                   	push   %rbp
 6a1:	48 89 e5             	mov    %rsp,%rbp
 6a4:	5d                   	pop    %rbp
 6a5:	e9 66 ff ff ff       	jmpq   610 <register_tm_clones>

00000000000006aa <main>:
 6aa:	55                   	push   %rbp
 6ab:	48 89 e5             	mov    %rsp,%rbp
 6ae:	48 8d 3d af 00 00 00 	lea    0xaf(%rip),%rdi        # 764 <_IO_stdin_used+0x4>
 6b5:	b8 00 00 00 00       	mov    $0x0,%eax
 6ba:	e8 b1 fe ff ff       	callq  570 <printf@plt>
 6bf:	48 8d 3d ab 00 00 00 	lea    0xab(%rip),%rdi        # 771 <_IO_stdin_used+0x11>
 6c6:	b8 00 00 00 00       	mov    $0x0,%eax
 6cb:	e8 b0 fe ff ff       	callq  580 <__isoc99_scanf@plt>
 6d0:	b8 00 00 00 00       	mov    $0x0,%eax
 6d5:	5d                   	pop    %rbp
 6d6:	c3                   	retq   
 6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6de:	00 00 

00000000000006e0 <__libc_csu_init>:
 6e0:	41 57                	push   %r15
 6e2:	41 56                	push   %r14
 6e4:	49 89 d7             	mov    %rdx,%r15
 6e7:	41 55                	push   %r13
 6e9:	41 54                	push   %r12
 6eb:	4c 8d 25 be 06 20 00 	lea    0x2006be(%rip),%r12        # 200db0 <__frame_dummy_init_array_entry>
 6f2:	55                   	push   %rbp
 6f3:	48 8d 2d be 06 20 00 	lea    0x2006be(%rip),%rbp        # 200db8 <__init_array_end>
 6fa:	53                   	push   %rbx
 6fb:	41 89 fd             	mov    %edi,%r13d
 6fe:	49 89 f6             	mov    %rsi,%r14
 701:	4c 29 e5             	sub    %r12,%rbp
 704:	48 83 ec 08          	sub    $0x8,%rsp
 708:	48 c1 fd 03          	sar    $0x3,%rbp
 70c:	e8 37 fe ff ff       	callq  548 <_init>
 711:	48 85 ed             	test   %rbp,%rbp
 714:	74 20                	je     736 <__libc_csu_init+0x56>
 716:	31 db                	xor    %ebx,%ebx
 718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 71f:	00 
 720:	4c 89 fa             	mov    %r15,%rdx
 723:	4c 89 f6             	mov    %r14,%rsi
 726:	44 89 ef             	mov    %r13d,%edi
 729:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 72d:	48 83 c3 01          	add    $0x1,%rbx
 731:	48 39 dd             	cmp    %rbx,%rbp
 734:	75 ea                	jne    720 <__libc_csu_init+0x40>
 736:	48 83 c4 08          	add    $0x8,%rsp
 73a:	5b                   	pop    %rbx
 73b:	5d                   	pop    %rbp
 73c:	41 5c                	pop    %r12
 73e:	41 5d                	pop    %r13
 740:	41 5e                	pop    %r14
 742:	41 5f                	pop    %r15
 744:	c3                   	retq   
 745:	90                   	nop
 746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 74d:	00 00 00 

0000000000000750 <__libc_csu_fini>:
 750:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000754 <_fini>:
 754:	48 83 ec 08          	sub    $0x8,%rsp
 758:	48 83 c4 08          	add    $0x8,%rsp
 75c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000760 <_IO_stdin_used>:
 760:	01 00                	add    %eax,(%rax)
 762:	02 00                	add    (%rax),%al
 764:	48                   	rex.W
 765:	45                   	rex.RB
 766:	4c                   	rex.WR
 767:	4c                   	rex.WR
 768:	4f 20 57 4f          	rex.WRXB and %r10b,0x4f(%r15)
 76c:	52                   	push   %rdx
 76d:	4c                   	rex.WR
 76e:	44 21 00             	and    %r8d,(%rax)
 771:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
 776:	20 77 6f             	and    %dh,0x6f(%rdi)
 779:	72 6c                	jb     7e7 <__GNU_EH_FRAME_HDR+0x67>
 77b:	64 21 00             	and    %eax,%fs:(%rax)

Disassembly of section .eh_frame_hdr:

0000000000000780 <__GNU_EH_FRAME_HDR>:
 780:	01 1b                	add    %ebx,(%rbx)
 782:	03 3b                	add    (%rbx),%edi
 784:	3c 00                	cmp    $0x0,%al
 786:	00 00                	add    %al,(%rax)
 788:	06                   	(bad)  
 789:	00 00                	add    %al,(%rax)
 78b:	00 e0                	add    %ah,%al
 78d:	fd                   	std    
 78e:	ff                   	(bad)  
 78f:	ff 88 00 00 00 10    	decl   0x10000000(%rax)
 795:	fe                   	(bad)  
 796:	ff                   	(bad)  
 797:	ff b0 00 00 00 20    	pushq  0x20000000(%rax)
 79d:	fe                   	(bad)  
 79e:	ff                   	(bad)  
 79f:	ff 58 00             	lcall  *0x0(%rax)
 7a2:	00 00                	add    %al,(%rax)
 7a4:	2a ff                	sub    %bh,%bh
 7a6:	ff                   	(bad)  
 7a7:	ff c8                	dec    %eax
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 60 ff             	add    %ah,-0x1(%rax)
 7ae:	ff                   	(bad)  
 7af:	ff                   	(bad)  
 7b0:	e8 00 00 00 d0       	callq  ffffffffd00007b5 <_end+0xffffffffcfdff79d>
 7b5:	ff                   	(bad)  
 7b6:	ff                   	(bad)  
 7b7:	ff 30                	pushq  (%rax)
 7b9:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

00000000000007c0 <__FRAME_END__-0x104>:
 7c0:	14 00                	adc    $0x0,%al
 7c2:	00 00                	add    %al,(%rax)
 7c4:	00 00                	add    %al,(%rax)
 7c6:	00 00                	add    %al,(%rax)
 7c8:	01 7a 52             	add    %edi,0x52(%rdx)
 7cb:	00 01                	add    %al,(%rcx)
 7cd:	78 10                	js     7df <__GNU_EH_FRAME_HDR+0x5f>
 7cf:	01 1b                	add    %ebx,(%rbx)
 7d1:	0c 07                	or     $0x7,%al
 7d3:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 1c 00             	add    %bl,(%rax,%rax,1)
 7de:	00 00                	add    %al,(%rax)
 7e0:	c0 fd ff             	sar    $0xff,%ch
 7e3:	ff 2b                	ljmp   *(%rbx)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 14 00             	add    %dl,(%rax,%rax,1)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	01 7a 52             	add    %edi,0x52(%rdx)
 7fb:	00 01                	add    %al,(%rcx)
 7fd:	78 10                	js     80f <__GNU_EH_FRAME_HDR+0x8f>
 7ff:	01 1b                	add    %ebx,(%rbx)
 801:	0c 07                	or     $0x7,%al
 803:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 809:	00 00                	add    %al,(%rax)
 80b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 80e:	00 00                	add    %al,(%rax)
 810:	50                   	push   %rax
 811:	fd                   	std    
 812:	ff                   	(bad)  
 813:	ff 30                	pushq  (%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 00                	add    %al,(%rax)
 819:	0e                   	(bad)  
 81a:	10 46 0e             	adc    %al,0xe(%rsi)
 81d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 820:	0b 77 08             	or     0x8(%rdi),%esi
 823:	80 00 3f             	addb   $0x3f,(%rax)
 826:	1a 3b                	sbb    (%rbx),%bh
 828:	2a 33                	sub    (%rbx),%dh
 82a:	24 22                	and    $0x22,%al
 82c:	00 00                	add    %al,(%rax)
 82e:	00 00                	add    %al,(%rax)
 830:	14 00                	adc    $0x0,%al
 832:	00 00                	add    %al,(%rax)
 834:	44 00 00             	add    %r8b,(%rax)
 837:	00 58 fd             	add    %bl,-0x3(%rax)
 83a:	ff                   	(bad)  
 83b:	ff 08                	decl   (%rax)
	...
 845:	00 00                	add    %al,(%rax)
 847:	00 1c 00             	add    %bl,(%rax,%rax,1)
 84a:	00 00                	add    %al,(%rax)
 84c:	5c                   	pop    %rsp
 84d:	00 00                	add    %al,(%rax)
 84f:	00 5a fe             	add    %bl,-0x2(%rdx)
 852:	ff                   	(bad)  
 853:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 859 <__GNU_EH_FRAME_HDR+0xd9>
 859:	41 0e                	rex.B (bad) 
 85b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 861:	68 0c 07 08 00       	pushq  $0x8070c
 866:	00 00                	add    %al,(%rax)
 868:	44 00 00             	add    %r8b,(%rax)
 86b:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 86f:	00 70 fe             	add    %dh,-0x2(%rax)
 872:	ff                   	(bad)  
 873:	ff 65 00             	jmpq   *0x0(%rbp)
 876:	00 00                	add    %al,(%rax)
 878:	00 42 0e             	add    %al,0xe(%rdx)
 87b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 881:	8e 03                	mov    (%rbx),%es
 883:	45 0e                	rex.RB (bad) 
 885:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 88b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff863016d9 <_end+0xffffffff861006c1>
 891:	06                   	(bad)  
 892:	48 0e                	rex.W (bad) 
 894:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 89a:	72 0e                	jb     8aa <__GNU_EH_FRAME_HDR+0x12a>
 89c:	38 41 0e             	cmp    %al,0xe(%rcx)
 89f:	30 41 0e             	xor    %al,0xe(%rcx)
 8a2:	28 42 0e             	sub    %al,0xe(%rdx)
 8a5:	20 42 0e             	and    %al,0xe(%rdx)
 8a8:	18 42 0e             	sbb    %al,0xe(%rdx)
 8ab:	10 42 0e             	adc    %al,0xe(%rdx)
 8ae:	08 00                	or     %al,(%rax)
 8b0:	10 00                	adc    %al,(%rax)
 8b2:	00 00                	add    %al,(%rax)
 8b4:	c4                   	(bad)  
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 98 fe ff ff 02    	add    %bl,0x2fffffe(%rax)
 8bd:	00 00                	add    %al,(%rax)
 8bf:	00 00                	add    %al,(%rax)
 8c1:	00 00                	add    %al,(%rax)
	...

00000000000008c4 <__FRAME_END__>:
 8c4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200db0 <__frame_dummy_init_array_entry>:
  200db0:	a0                   	.byte 0xa0
  200db1:	06                   	(bad)  
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200db8 <__do_global_dtors_aux_fini_array_entry>:
  200db8:	60                   	(bad)  
  200db9:	06                   	(bad)  
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200dc0 <_DYNAMIC>:
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	01 00                	add    %eax,(%rax)
  200dca:	00 00                	add    %al,(%rax)
  200dcc:	00 00                	add    %al,(%rax)
  200dce:	00 00                	add    %al,(%rax)
  200dd0:	0c 00                	or     $0x0,%al
  200dd2:	00 00                	add    %al,(%rax)
  200dd4:	00 00                	add    %al,(%rax)
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	48 05 00 00 00 00    	add    $0x0,%rax
  200dde:	00 00                	add    %al,(%rax)
  200de0:	0d 00 00 00 00       	or     $0x0,%eax
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 54 07 00          	add    %dl,0x0(%rdi,%rax,1)
  200deb:	00 00                	add    %al,(%rax)
  200ded:	00 00                	add    %al,(%rax)
  200def:	00 19                	add    %bl,(%rcx)
  200df1:	00 00                	add    %al,(%rax)
  200df3:	00 00                	add    %al,(%rax)
  200df5:	00 00                	add    %al,(%rax)
  200df7:	00 b0 0d 20 00 00    	add    %dh,0x200d(%rax)
  200dfd:	00 00                	add    %al,(%rax)
  200dff:	00 1b                	add    %bl,(%rbx)
  200e01:	00 00                	add    %al,(%rax)
  200e03:	00 00                	add    %al,(%rax)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 08                	add    %cl,(%rax)
  200e09:	00 00                	add    %al,(%rax)
  200e0b:	00 00                	add    %al,(%rax)
  200e0d:	00 00                	add    %al,(%rax)
  200e0f:	00 1a                	add    %bl,(%rdx)
  200e11:	00 00                	add    %al,(%rax)
  200e13:	00 00                	add    %al,(%rax)
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 b8 0d 20 00 00    	add    %bh,0x200d(%rax)
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	08 00                	or     %al,(%rax)
  200e2a:	00 00                	add    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	f5                   	cmc    
  200e31:	fe                   	(bad)  
  200e32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e45 <_DYNAMIC+0x85>
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 78 03             	add    %bh,0x3(%rax)
  200e4a:	00 00                	add    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	06                   	(bad)  
  200e51:	00 00                	add    %al,(%rax)
  200e53:	00 00                	add    %al,(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 0a                	add    %cl,(%rdx)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 9d 00 00 00 00    	add    %bl,0x0(%rbp)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 0b                	add    %cl,(%rbx)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 18                	add    %bl,(%rax)
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e85 <_DYNAMIC+0xc5>
	...
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 03                	add    %al,(%rbx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 b0 0f 20 00 00    	add    %dh,0x200f(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 02                	add    %al,(%rdx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 30                	add    %dh,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 17                	add    %dl,(%rdi)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 18                	add    %bl,(%rax)
  200ec9:	05 00 00 00 00       	add    $0x0,%eax
  200ece:	00 00                	add    %al,(%rax)
  200ed0:	07                   	(bad)  
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 58 04             	add    %bl,0x4(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	08 00                	or     %al,(%rax)
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	c0 00 00             	rolb   $0x0,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 09                	add    %cl,(%rcx)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 18                	add    %bl,(%rax)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 1e                	add    %bl,(%rsi)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 08                	add    %cl,(%rax)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 fb                	add    %bh,%bl
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 01                	add    %al,(%rcx)
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	08 00                	or     %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 fe                	add    %bh,%dh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 28                	add    %ch,(%rax)
  200f29:	04 00                	add    $0x0,%al
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 ff                	add    %bh,%bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 01                	add    %al,(%rcx)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 f0                	add    %dh,%al
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 16                	add    %dl,(%rsi)
  200f49:	04 00                	add    $0x0,%al
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f9                	add    %bh,%cl
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fb0 <_GLOBAL_OFFSET_TABLE_>:
  200fb0:	c0 0d 20 00 00 00 00 	rorb   $0x0,0x20(%rip)        # 200fd7 <_GLOBAL_OFFSET_TABLE_+0x27>
	...
  200fc7:	00 76 05             	add    %dh,0x5(%rsi)
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	86 05 00 00 00 00    	xchg   %al,0x0(%rip)        # 200fd6 <_GLOBAL_OFFSET_TABLE_+0x26>
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4d0>
   a:	74 75                	je     81 <_init-0x4c7>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 32 37 75 62    	xor    %ch,0x62753732(%rip)        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x4c1>
  19:	74 75                	je     90 <_init-0x4b8>
  1b:	31 7e 31             	xor    %edi,0x31(%rsi)
  1e:	38 2e                	cmp    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 37                	and    %dh,(%rdi)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)

/home/ilsoo/dec/IR/testfile/io/0:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2d3>
 248:	78 38                	js     282 <_init-0x2c6>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 be c2 34 1c 81    	add    %bh,-0x7ee3cb3e(%rsi)
 289:	6e                   	outsb  %ds:(%rsi),(%dx)
 28a:	2a 2f                	sub    (%rdi),%ch
 28c:	82                   	(bad)  
 28d:	8e 00                	mov    (%rax),%es
 28f:	95                   	xchg   %eax,%ebp
 290:	55                   	push   %rbp
 291:	25 7f ca 46 12       	and    $0x1246ca7f,%eax
 296:	5a                   	pop    %rdx
 297:	14                   	.byte 0x14

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	58                   	pop    %rax
 2d1:	00 00                	add    %al,(%rax)
 2d3:	00 20                	add    %ah,(%rax)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 1a                	add    %bl,(%rdx)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 30                	add    %dh,(%rax)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
 31b:	00 20                	add    %ah,(%rax)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 0b                	add    %cl,(%rbx)
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 83 00 00 00 20    	add    %al,0x20000000(%rbx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 21                	add    %ah,(%rcx)
 361:	00 00                	add    %al,(%rax)
 363:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 37c:	63 2e                	movslq (%rsi),%ebp
 37e:	73 6f                	jae    3ef <_init-0x159>
 380:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 385:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 38c:	73 63                	jae    3f1 <_init-0x157>
 38e:	61                   	(bad)  
 38f:	6e                   	outsb  %ds:(%rsi),(%dx)
 390:	66 00 70 72          	data16 add %dh,0x72(%rax)
 394:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 39b:	63 78 61             	movslq 0x61(%rax),%edi
 39e:	5f                   	pop    %rdi
 39f:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3a5:	7a 65                	jp     40c <_init-0x13c>
 3a7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3aa:	6c                   	insb   (%dx),%es:(%rdi)
 3ab:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3b2:	72 74                	jb     428 <_init-0x120>
 3b4:	5f                   	pop    %rdi
 3b5:	6d                   	insl   (%dx),%es:(%rdi)
 3b6:	61                   	(bad)  
 3b7:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 3be:	43 5f                	rex.XB pop %r15
 3c0:	32 2e                	xor    (%rsi),%ch
 3c2:	37                   	(bad)  
 3c3:	00 47 4c             	add    %al,0x4c(%rdi)
 3c6:	49                   	rex.WB
 3c7:	42                   	rex.X
 3c8:	43 5f                	rex.XB pop %r15
 3ca:	32 2e                	xor    (%rsi),%ch
 3cc:	32 2e                	xor    (%rsi),%ch
 3ce:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3d3:	4d 5f                	rex.WRB pop %r15
 3d5:	64 65 72 65          	fs gs jb 43e <_init-0x10a>
 3d9:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3e0:	4d 
 3e1:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3e3:	6f                   	outsl  %ds:(%rsi),(%dx)
 3e4:	6e                   	outsb  %ds:(%rsi),(%dx)
 3e5:	65 54                	gs push %rsp
 3e7:	61                   	(bad)  
 3e8:	62                   	(bad)  
 3e9:	6c                   	insb   (%dx),%es:(%rdi)
 3ea:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3ee:	67 6d                	insl   (%dx),%es:(%edi)
 3f0:	6f                   	outsl  %ds:(%rsi),(%dx)
 3f1:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f2:	5f                   	pop    %rdi
 3f3:	73 74                	jae    469 <_init-0xdf>
 3f5:	61                   	(bad)  
 3f6:	72 74                	jb     46c <_init-0xdc>
 3f8:	5f                   	pop    %rdi
 3f9:	5f                   	pop    %rdi
 3fa:	00 5f 49             	add    %bl,0x49(%rdi)
 3fd:	54                   	push   %rsp
 3fe:	4d 5f                	rex.WRB pop %r15
 400:	72 65                	jb     467 <_init-0xe1>
 402:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 409:	4d 
 40a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 40c:	6f                   	outsl  %ds:(%rsi),(%dx)
 40d:	6e                   	outsb  %ds:(%rsi),(%dx)
 40e:	65 54                	gs push %rsp
 410:	61                   	(bad)  
 411:	62                   	.byte 0x62
 412:	6c                   	insb   (%dx),%es:(%rdi)
 413:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000416 <.gnu.version>:
 416:	00 00                	add    %al,(%rax)
 418:	00 00                	add    %al,(%rax)
 41a:	02 00                	add    (%rax),%al
 41c:	02 00                	add    (%rax),%al
 41e:	00 00                	add    %al,(%rax)
 420:	03 00                	add    (%rax),%eax
 422:	00 00                	add    %al,(%rax)
 424:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000428 <.gnu.version_r>:
 428:	01 00                	add    %eax,(%rax)
 42a:	02 00                	add    (%rax),%al
 42c:	01 00                	add    %eax,(%rax)
 42e:	00 00                	add    %al,(%rax)
 430:	10 00                	adc    %al,(%rax)
 432:	00 00                	add    %al,(%rax)
 434:	00 00                	add    %al,(%rax)
 436:	00 00                	add    %al,(%rax)
 438:	17                   	(bad)  
 439:	69 69 0d 00 00 03 00 	imul   $0x30000,0xd(%rcx),%ebp
 440:	42 00 00             	rex.X add %al,(%rax)
 443:	00 10                	add    %dl,(%rax)
 445:	00 00                	add    %al,(%rax)
 447:	00 75 1a             	add    %dh,0x1a(%rbp)
 44a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 450:	4c 00 00             	rex.WR add %r8b,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	b0 0d                	mov    $0xd,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	a0 06 00 00 00 00 00 	movabs 0xb800000000000006,%al
 46f:	00 b8 
 471:	0d 20 00 00 00       	or     $0x20,%eax
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	60                   	(bad)  
 481:	06                   	(bad)  
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 10                	or     %dl,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	08 10                	or     %dl,(%rax)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	d8 0f                	fmuls  (%rdi)
 4a2:	20 00                	and    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 01                	add    %al,(%rcx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e0                	add    %ah,%al
 4b9:	0f 20 00             	mov    %cr0,%rax
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	06                   	(bad)  
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 03                	add    %al,(%rbx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 e8                	add    %ch,%al
 4d1:	0f 20 00             	mov    %cr0,%rax
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	06                   	(bad)  
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4e6:	00 00                	add    %al,(%rax)
 4e8:	f0 0f 20 00          	lock mov %cr0,%rax
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 06                	add    %al,(%rsi)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 f8                	add    %bh,%al
 501:	0f 20 00             	mov    %cr0,%rax
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	06                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000518 <.rela.plt>:
 518:	c8 0f 20 00          	enterq $0x200f,$0x0
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	07                   	(bad)  
 521:	00 00                	add    %al,(%rax)
 523:	00 02                	add    %al,(%rdx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 d0                	add    %dl,%al
 531:	0f 20 00             	mov    %cr0,%rax
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	07                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 541 <_init-0x7>
 541:	00 00                	add    %al,(%rax)
 543:	00 00                	add    %al,(%rax)
 545:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000000548 <_init>:
 548:	48 83 ec 08          	sub    $0x8,%rsp
 54c:	48 8b 05 95 0a 20 00 	mov    0x200a95(%rip),%rax        # 200fe8 <__gmon_start__>
 553:	48 85 c0             	test   %rax,%rax
 556:	74 02                	je     55a <_init+0x12>
 558:	ff d0                	callq  *%rax
 55a:	48 83 c4 08          	add    $0x8,%rsp
 55e:	c3                   	retq   

Disassembly of section .plt:

0000000000000560 <.plt>:
 560:	ff 35 52 0a 20 00    	pushq  0x200a52(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 566:	ff 25 54 0a 20 00    	jmpq   *0x200a54(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 56c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000570 <printf@plt>:
 570:	ff 25 52 0a 20 00    	jmpq   *0x200a52(%rip)        # 200fc8 <printf@GLIBC_2.2.5>
 576:	68 00 00 00 00       	pushq  $0x0
 57b:	e9 e0 ff ff ff       	jmpq   560 <.plt>

0000000000000580 <__isoc99_scanf@plt>:
 580:	ff 25 4a 0a 20 00    	jmpq   *0x200a4a(%rip)        # 200fd0 <__isoc99_scanf@GLIBC_2.7>
 586:	68 01 00 00 00       	pushq  $0x1
 58b:	e9 d0 ff ff ff       	jmpq   560 <.plt>

Disassembly of section .plt.got:

0000000000000590 <__cxa_finalize@plt>:
 590:	ff 25 62 0a 20 00    	jmpq   *0x200a62(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 596:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005a0 <_start>:
 5a0:	31 ed                	xor    %ebp,%ebp
 5a2:	49 89 d1             	mov    %rdx,%r9
 5a5:	5e                   	pop    %rsi
 5a6:	48 89 e2             	mov    %rsp,%rdx
 5a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5ad:	50                   	push   %rax
 5ae:	54                   	push   %rsp
 5af:	4c 8d 05 9a 01 00 00 	lea    0x19a(%rip),%r8        # 750 <__libc_csu_fini>
 5b6:	48 8d 0d 23 01 00 00 	lea    0x123(%rip),%rcx        # 6e0 <__libc_csu_init>
 5bd:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 6aa <main>
 5c4:	ff 15 16 0a 20 00    	callq  *0x200a16(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5ca:	f4                   	hlt    
 5cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005d0 <deregister_tm_clones>:
 5d0:	48 8d 3d 39 0a 20 00 	lea    0x200a39(%rip),%rdi        # 201010 <__TMC_END__>
 5d7:	55                   	push   %rbp
 5d8:	48 8d 05 31 0a 20 00 	lea    0x200a31(%rip),%rax        # 201010 <__TMC_END__>
 5df:	48 39 f8             	cmp    %rdi,%rax
 5e2:	48 89 e5             	mov    %rsp,%rbp
 5e5:	74 19                	je     600 <deregister_tm_clones+0x30>
 5e7:	48 8b 05 ea 09 20 00 	mov    0x2009ea(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 5ee:	48 85 c0             	test   %rax,%rax
 5f1:	74 0d                	je     600 <deregister_tm_clones+0x30>
 5f3:	5d                   	pop    %rbp
 5f4:	ff e0                	jmpq   *%rax
 5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5fd:	00 00 00 
 600:	5d                   	pop    %rbp
 601:	c3                   	retq   
 602:	0f 1f 40 00          	nopl   0x0(%rax)
 606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 60d:	00 00 00 

0000000000000610 <register_tm_clones>:
 610:	48 8d 3d f9 09 20 00 	lea    0x2009f9(%rip),%rdi        # 201010 <__TMC_END__>
 617:	48 8d 35 f2 09 20 00 	lea    0x2009f2(%rip),%rsi        # 201010 <__TMC_END__>
 61e:	55                   	push   %rbp
 61f:	48 29 fe             	sub    %rdi,%rsi
 622:	48 89 e5             	mov    %rsp,%rbp
 625:	48 c1 fe 03          	sar    $0x3,%rsi
 629:	48 89 f0             	mov    %rsi,%rax
 62c:	48 c1 e8 3f          	shr    $0x3f,%rax
 630:	48 01 c6             	add    %rax,%rsi
 633:	48 d1 fe             	sar    %rsi
 636:	74 18                	je     650 <register_tm_clones+0x40>
 638:	48 8b 05 b1 09 20 00 	mov    0x2009b1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 63f:	48 85 c0             	test   %rax,%rax
 642:	74 0c                	je     650 <register_tm_clones+0x40>
 644:	5d                   	pop    %rbp
 645:	ff e0                	jmpq   *%rax
 647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 64e:	00 00 
 650:	5d                   	pop    %rbp
 651:	c3                   	retq   
 652:	0f 1f 40 00          	nopl   0x0(%rax)
 656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 65d:	00 00 00 

0000000000000660 <__do_global_dtors_aux>:
 660:	80 3d a9 09 20 00 00 	cmpb   $0x0,0x2009a9(%rip)        # 201010 <__TMC_END__>
 667:	75 2f                	jne    698 <__do_global_dtors_aux+0x38>
 669:	48 83 3d 87 09 20 00 	cmpq   $0x0,0x200987(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 670:	00 
 671:	55                   	push   %rbp
 672:	48 89 e5             	mov    %rsp,%rbp
 675:	74 0c                	je     683 <__do_global_dtors_aux+0x23>
 677:	48 8b 3d 8a 09 20 00 	mov    0x20098a(%rip),%rdi        # 201008 <__dso_handle>
 67e:	e8 0d ff ff ff       	callq  590 <__cxa_finalize@plt>
 683:	e8 48 ff ff ff       	callq  5d0 <deregister_tm_clones>
 688:	c6 05 81 09 20 00 01 	movb   $0x1,0x200981(%rip)        # 201010 <__TMC_END__>
 68f:	5d                   	pop    %rbp
 690:	c3                   	retq   
 691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 698:	f3 c3                	repz retq 
 69a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006a0 <frame_dummy>:
 6a0:	55                   	push   %rbp
 6a1:	48 89 e5             	mov    %rsp,%rbp
 6a4:	5d                   	pop    %rbp
 6a5:	e9 66 ff ff ff       	jmpq   610 <register_tm_clones>

00000000000006aa <main>:
 6aa:	55                   	push   %rbp
 6ab:	48 89 e5             	mov    %rsp,%rbp
 6ae:	48 8d 3d af 00 00 00 	lea    0xaf(%rip),%rdi        # 764 <_IO_stdin_used+0x4>
 6b5:	b8 00 00 00 00       	mov    $0x0,%eax
 6ba:	e8 b1 fe ff ff       	callq  570 <printf@plt>
 6bf:	48 8d 3d ab 00 00 00 	lea    0xab(%rip),%rdi        # 771 <_IO_stdin_used+0x11>
 6c6:	b8 00 00 00 00       	mov    $0x0,%eax
 6cb:	e8 b0 fe ff ff       	callq  580 <__isoc99_scanf@plt>
 6d0:	b8 00 00 00 00       	mov    $0x0,%eax
 6d5:	5d                   	pop    %rbp
 6d6:	c3                   	retq   
 6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6de:	00 00 

00000000000006e0 <__libc_csu_init>:
 6e0:	41 57                	push   %r15
 6e2:	41 56                	push   %r14
 6e4:	49 89 d7             	mov    %rdx,%r15
 6e7:	41 55                	push   %r13
 6e9:	41 54                	push   %r12
 6eb:	4c 8d 25 be 06 20 00 	lea    0x2006be(%rip),%r12        # 200db0 <__frame_dummy_init_array_entry>
 6f2:	55                   	push   %rbp
 6f3:	48 8d 2d be 06 20 00 	lea    0x2006be(%rip),%rbp        # 200db8 <__init_array_end>
 6fa:	53                   	push   %rbx
 6fb:	41 89 fd             	mov    %edi,%r13d
 6fe:	49 89 f6             	mov    %rsi,%r14
 701:	4c 29 e5             	sub    %r12,%rbp
 704:	48 83 ec 08          	sub    $0x8,%rsp
 708:	48 c1 fd 03          	sar    $0x3,%rbp
 70c:	e8 37 fe ff ff       	callq  548 <_init>
 711:	48 85 ed             	test   %rbp,%rbp
 714:	74 20                	je     736 <__libc_csu_init+0x56>
 716:	31 db                	xor    %ebx,%ebx
 718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 71f:	00 
 720:	4c 89 fa             	mov    %r15,%rdx
 723:	4c 89 f6             	mov    %r14,%rsi
 726:	44 89 ef             	mov    %r13d,%edi
 729:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 72d:	48 83 c3 01          	add    $0x1,%rbx
 731:	48 39 dd             	cmp    %rbx,%rbp
 734:	75 ea                	jne    720 <__libc_csu_init+0x40>
 736:	48 83 c4 08          	add    $0x8,%rsp
 73a:	5b                   	pop    %rbx
 73b:	5d                   	pop    %rbp
 73c:	41 5c                	pop    %r12
 73e:	41 5d                	pop    %r13
 740:	41 5e                	pop    %r14
 742:	41 5f                	pop    %r15
 744:	c3                   	retq   
 745:	90                   	nop
 746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 74d:	00 00 00 

0000000000000750 <__libc_csu_fini>:
 750:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000754 <_fini>:
 754:	48 83 ec 08          	sub    $0x8,%rsp
 758:	48 83 c4 08          	add    $0x8,%rsp
 75c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000760 <_IO_stdin_used>:
 760:	01 00                	add    %eax,(%rax)
 762:	02 00                	add    (%rax),%al
 764:	48                   	rex.W
 765:	45                   	rex.RB
 766:	4c                   	rex.WR
 767:	4c                   	rex.WR
 768:	4f 20 57 4f          	rex.WRXB and %r10b,0x4f(%r15)
 76c:	52                   	push   %rdx
 76d:	4c                   	rex.WR
 76e:	44 21 00             	and    %r8d,(%rax)
 771:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
 776:	20 77 6f             	and    %dh,0x6f(%rdi)
 779:	72 6c                	jb     7e7 <__GNU_EH_FRAME_HDR+0x67>
 77b:	64 21 00             	and    %eax,%fs:(%rax)

Disassembly of section .eh_frame_hdr:

0000000000000780 <__GNU_EH_FRAME_HDR>:
 780:	01 1b                	add    %ebx,(%rbx)
 782:	03 3b                	add    (%rbx),%edi
 784:	3c 00                	cmp    $0x0,%al
 786:	00 00                	add    %al,(%rax)
 788:	06                   	(bad)  
 789:	00 00                	add    %al,(%rax)
 78b:	00 e0                	add    %ah,%al
 78d:	fd                   	std    
 78e:	ff                   	(bad)  
 78f:	ff 88 00 00 00 10    	decl   0x10000000(%rax)
 795:	fe                   	(bad)  
 796:	ff                   	(bad)  
 797:	ff b0 00 00 00 20    	pushq  0x20000000(%rax)
 79d:	fe                   	(bad)  
 79e:	ff                   	(bad)  
 79f:	ff 58 00             	lcall  *0x0(%rax)
 7a2:	00 00                	add    %al,(%rax)
 7a4:	2a ff                	sub    %bh,%bh
 7a6:	ff                   	(bad)  
 7a7:	ff c8                	dec    %eax
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 60 ff             	add    %ah,-0x1(%rax)
 7ae:	ff                   	(bad)  
 7af:	ff                   	(bad)  
 7b0:	e8 00 00 00 d0       	callq  ffffffffd00007b5 <_end+0xffffffffcfdff79d>
 7b5:	ff                   	(bad)  
 7b6:	ff                   	(bad)  
 7b7:	ff 30                	pushq  (%rax)
 7b9:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

00000000000007c0 <__FRAME_END__-0x104>:
 7c0:	14 00                	adc    $0x0,%al
 7c2:	00 00                	add    %al,(%rax)
 7c4:	00 00                	add    %al,(%rax)
 7c6:	00 00                	add    %al,(%rax)
 7c8:	01 7a 52             	add    %edi,0x52(%rdx)
 7cb:	00 01                	add    %al,(%rcx)
 7cd:	78 10                	js     7df <__GNU_EH_FRAME_HDR+0x5f>
 7cf:	01 1b                	add    %ebx,(%rbx)
 7d1:	0c 07                	or     $0x7,%al
 7d3:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 1c 00             	add    %bl,(%rax,%rax,1)
 7de:	00 00                	add    %al,(%rax)
 7e0:	c0 fd ff             	sar    $0xff,%ch
 7e3:	ff 2b                	ljmp   *(%rbx)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 14 00             	add    %dl,(%rax,%rax,1)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	01 7a 52             	add    %edi,0x52(%rdx)
 7fb:	00 01                	add    %al,(%rcx)
 7fd:	78 10                	js     80f <__GNU_EH_FRAME_HDR+0x8f>
 7ff:	01 1b                	add    %ebx,(%rbx)
 801:	0c 07                	or     $0x7,%al
 803:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 809:	00 00                	add    %al,(%rax)
 80b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 80e:	00 00                	add    %al,(%rax)
 810:	50                   	push   %rax
 811:	fd                   	std    
 812:	ff                   	(bad)  
 813:	ff 30                	pushq  (%rax)
 815:	00 00                	add    %al,(%rax)
 817:	00 00                	add    %al,(%rax)
 819:	0e                   	(bad)  
 81a:	10 46 0e             	adc    %al,0xe(%rsi)
 81d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 820:	0b 77 08             	or     0x8(%rdi),%esi
 823:	80 00 3f             	addb   $0x3f,(%rax)
 826:	1a 3b                	sbb    (%rbx),%bh
 828:	2a 33                	sub    (%rbx),%dh
 82a:	24 22                	and    $0x22,%al
 82c:	00 00                	add    %al,(%rax)
 82e:	00 00                	add    %al,(%rax)
 830:	14 00                	adc    $0x0,%al
 832:	00 00                	add    %al,(%rax)
 834:	44 00 00             	add    %r8b,(%rax)
 837:	00 58 fd             	add    %bl,-0x3(%rax)
 83a:	ff                   	(bad)  
 83b:	ff 08                	decl   (%rax)
	...
 845:	00 00                	add    %al,(%rax)
 847:	00 1c 00             	add    %bl,(%rax,%rax,1)
 84a:	00 00                	add    %al,(%rax)
 84c:	5c                   	pop    %rsp
 84d:	00 00                	add    %al,(%rax)
 84f:	00 5a fe             	add    %bl,-0x2(%rdx)
 852:	ff                   	(bad)  
 853:	ff 2d 00 00 00 00    	ljmp   *0x0(%rip)        # 859 <__GNU_EH_FRAME_HDR+0xd9>
 859:	41 0e                	rex.B (bad) 
 85b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 861:	68 0c 07 08 00       	pushq  $0x8070c
 866:	00 00                	add    %al,(%rax)
 868:	44 00 00             	add    %r8b,(%rax)
 86b:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 86f:	00 70 fe             	add    %dh,-0x2(%rax)
 872:	ff                   	(bad)  
 873:	ff 65 00             	jmpq   *0x0(%rbp)
 876:	00 00                	add    %al,(%rax)
 878:	00 42 0e             	add    %al,0xe(%rdx)
 87b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 881:	8e 03                	mov    (%rbx),%es
 883:	45 0e                	rex.RB (bad) 
 885:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 88b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff863016d9 <_end+0xffffffff861006c1>
 891:	06                   	(bad)  
 892:	48 0e                	rex.W (bad) 
 894:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 89a:	72 0e                	jb     8aa <__GNU_EH_FRAME_HDR+0x12a>
 89c:	38 41 0e             	cmp    %al,0xe(%rcx)
 89f:	30 41 0e             	xor    %al,0xe(%rcx)
 8a2:	28 42 0e             	sub    %al,0xe(%rdx)
 8a5:	20 42 0e             	and    %al,0xe(%rdx)
 8a8:	18 42 0e             	sbb    %al,0xe(%rdx)
 8ab:	10 42 0e             	adc    %al,0xe(%rdx)
 8ae:	08 00                	or     %al,(%rax)
 8b0:	10 00                	adc    %al,(%rax)
 8b2:	00 00                	add    %al,(%rax)
 8b4:	c4                   	(bad)  
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 98 fe ff ff 02    	add    %bl,0x2fffffe(%rax)
 8bd:	00 00                	add    %al,(%rax)
 8bf:	00 00                	add    %al,(%rax)
 8c1:	00 00                	add    %al,(%rax)
	...

00000000000008c4 <__FRAME_END__>:
 8c4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200db0 <__frame_dummy_init_array_entry>:
  200db0:	a0                   	.byte 0xa0
  200db1:	06                   	(bad)  
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200db8 <__do_global_dtors_aux_fini_array_entry>:
  200db8:	60                   	(bad)  
  200db9:	06                   	(bad)  
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200dc0 <_DYNAMIC>:
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	01 00                	add    %eax,(%rax)
  200dca:	00 00                	add    %al,(%rax)
  200dcc:	00 00                	add    %al,(%rax)
  200dce:	00 00                	add    %al,(%rax)
  200dd0:	0c 00                	or     $0x0,%al
  200dd2:	00 00                	add    %al,(%rax)
  200dd4:	00 00                	add    %al,(%rax)
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	48 05 00 00 00 00    	add    $0x0,%rax
  200dde:	00 00                	add    %al,(%rax)
  200de0:	0d 00 00 00 00       	or     $0x0,%eax
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 54 07 00          	add    %dl,0x0(%rdi,%rax,1)
  200deb:	00 00                	add    %al,(%rax)
  200ded:	00 00                	add    %al,(%rax)
  200def:	00 19                	add    %bl,(%rcx)
  200df1:	00 00                	add    %al,(%rax)
  200df3:	00 00                	add    %al,(%rax)
  200df5:	00 00                	add    %al,(%rax)
  200df7:	00 b0 0d 20 00 00    	add    %dh,0x200d(%rax)
  200dfd:	00 00                	add    %al,(%rax)
  200dff:	00 1b                	add    %bl,(%rbx)
  200e01:	00 00                	add    %al,(%rax)
  200e03:	00 00                	add    %al,(%rax)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 08                	add    %cl,(%rax)
  200e09:	00 00                	add    %al,(%rax)
  200e0b:	00 00                	add    %al,(%rax)
  200e0d:	00 00                	add    %al,(%rax)
  200e0f:	00 1a                	add    %bl,(%rdx)
  200e11:	00 00                	add    %al,(%rax)
  200e13:	00 00                	add    %al,(%rax)
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 b8 0d 20 00 00    	add    %bh,0x200d(%rax)
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	08 00                	or     %al,(%rax)
  200e2a:	00 00                	add    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	f5                   	cmc    
  200e31:	fe                   	(bad)  
  200e32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e45 <_DYNAMIC+0x85>
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 78 03             	add    %bh,0x3(%rax)
  200e4a:	00 00                	add    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	06                   	(bad)  
  200e51:	00 00                	add    %al,(%rax)
  200e53:	00 00                	add    %al,(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 0a                	add    %cl,(%rdx)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 9d 00 00 00 00    	add    %bl,0x0(%rbp)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 0b                	add    %cl,(%rbx)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 18                	add    %bl,(%rax)
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e85 <_DYNAMIC+0xc5>
	...
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 03                	add    %al,(%rbx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 b0 0f 20 00 00    	add    %dh,0x200f(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 02                	add    %al,(%rdx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 30                	add    %dh,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 17                	add    %dl,(%rdi)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 18                	add    %bl,(%rax)
  200ec9:	05 00 00 00 00       	add    $0x0,%eax
  200ece:	00 00                	add    %al,(%rax)
  200ed0:	07                   	(bad)  
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 58 04             	add    %bl,0x4(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	08 00                	or     %al,(%rax)
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	c0 00 00             	rolb   $0x0,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 09                	add    %cl,(%rcx)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 18                	add    %bl,(%rax)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 1e                	add    %bl,(%rsi)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 08                	add    %cl,(%rax)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 fb                	add    %bh,%bl
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 01                	add    %al,(%rcx)
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	08 00                	or     %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 fe                	add    %bh,%dh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 28                	add    %ch,(%rax)
  200f29:	04 00                	add    $0x0,%al
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 ff                	add    %bh,%bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 01                	add    %al,(%rcx)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 f0                	add    %dh,%al
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 16                	add    %dl,(%rsi)
  200f49:	04 00                	add    $0x0,%al
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f9                	add    %bh,%cl
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fb0 <_GLOBAL_OFFSET_TABLE_>:
  200fb0:	c0 0d 20 00 00 00 00 	rorb   $0x0,0x20(%rip)        # 200fd7 <_GLOBAL_OFFSET_TABLE_+0x27>
	...
  200fc7:	00 76 05             	add    %dh,0x5(%rsi)
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	86 05 00 00 00 00    	xchg   %al,0x0(%rip)        # 200fd6 <_GLOBAL_OFFSET_TABLE_+0x26>
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4d0>
   a:	74 75                	je     81 <_init-0x4c7>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 32 37 75 62    	xor    %ch,0x62753732(%rip)        # 62753749 <_end+0x62552731>
  17:	75 6e                	jne    87 <_init-0x4c1>
  19:	74 75                	je     90 <_init-0x4b8>
  1b:	31 7e 31             	xor    %edi,0x31(%rsi)
  1e:	38 2e                	cmp    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 37                	and    %dh,(%rdi)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)
